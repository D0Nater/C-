#include <iostream>
#include <string>

using namespace std;
/////////////////////////////////////////////////////////////////////
    char A1[41] = {'-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-'};

    char map01[10][10] = {{'+','&','+','&','+','&','+','&','+','&'},
                          {'&','+','&','+','&','+','&','+','&','+'},
                          {'+','&','+','&','+','&','+','&','+','&'},
                          {'=','+','=','+','=','+','=','+','=','+'},
                          {'+','=','+','=','+','=','+','=','+','='},
                          {'=','+','=','+','=','+','=','+','=','+'},
                          {'+','=','+','=','+','=','+','=','+','='},
                          {'#','+','#','+','#','+','#','+','#','+'},
                          {'+','#','+','#','+','#','+','#','+','#'},
                          {'#','+','#','+','#','+','#','+','#','+'}};

      char map02[8][8] = {{'+','&','+','&','+','&','+','&'},
                          {'&','+','&','+','&','+','&','+'},
                          {'+','&','+','&','+','&','+','&'},
                          {'=','+','=','+','=','+','=','+'},
                          {'+','=','+','=','+','=','+','='},
                          {'#','+','#','+','#','+','#','+'},
                          {'+','#','+','#','+','#','+','#'},
                          {'#','+','#','+','#','+','#','+'}};

      char map03[6][6] = {{'+','&','+','&','+','&'},
                          {'&','+','&','+','&','+'},
                          {'+','=','+','=','+','='},
                          {'=','+','=','+','=','+'},
                          {'+','#','+','#','+','#'},
                          {'#','+','#','+','#','+'}};

    char A2[41] = {'-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-'};
/////////////////////////////////////////////////////////////////////

/////////////////////////////////////////////////////////////////////
  void cleanboard()
  {
      for (int i = 0; i < 60; i++)
      {
          cout<<endl;
      }
  }
/////////////////////////////////////////////////////////////////////

/////////////////////////////////////////////////////////////////////
   void Map10x10()
   {
       cout<<"       1   2   3   4   5   6   7   8   9   10"<<endl;
       cout<<"     "<<A1[0]<<A1[1]<<A1[2]<<A1[3]<<A1[4]<<A1[5]<<A1[6]<<A1[7]<<A1[8]<<A1[9]
                    <<A1[10]<<A1[11]<<A1[12]<<A1[13]<<A1[14]<<A1[15]<<A1[16]<<A1[17]<<A1[18]<<A1[19]
                    <<A1[20]<<A1[21]<<A1[22]<<A1[23]<<A1[24]<<A1[25]<<A1[26]<<A1[27]<<A1[28]<<A1[29]
                    <<A1[30]<<A1[31]<<A1[32]<<A1[33]<<A1[34]<<A1[35]<<A1[36]<<A1[37]<<A1[38]<<A1[39]<<A1[40]<<endl;
       cout<<"  1  | "<<map01[0][0]<<" | "<<map01[0][1]<<" | "<<map01[0][2]<<" | "<<map01[0][3]<<" | "<<map01[0][4]<<" | "<<map01[0][5]<<" | "<<map01[0][6]<<" | "<<map01[0][7]<<" | "<<map01[0][8]<<" | "<<map01[0][9]<<" |"<<endl;
       cout<<"     -----------------------------------------"<<endl;
       cout<<"  2  | "<<map01[1][0]<<" | "<<map01[1][1]<<" | "<<map01[1][2]<<" | "<<map01[1][3]<<" | "<<map01[1][4]<<" | "<<map01[1][5]<<" | "<<map01[1][6]<<" | "<<map01[1][7]<<" | "<<map01[1][8]<<" | "<<map01[1][9]<<" |"<<endl;
       cout<<"     -----------------------------------------"<<endl;
       cout<<"  3  | "<<map01[2][0]<<" | "<<map01[2][1]<<" | "<<map01[2][2]<<" | "<<map01[2][3]<<" | "<<map01[2][4]<<" | "<<map01[2][5]<<" | "<<map01[2][6]<<" | "<<map01[2][7]<<" | "<<map01[2][8]<<" | "<<map01[2][9]<<" |"<<endl;
       cout<<"     -----------------------------------------"<<endl;
       cout<<"  4  | "<<map01[3][0]<<" | "<<map01[3][1]<<" | "<<map01[3][2]<<" | "<<map01[3][3]<<" | "<<map01[3][4]<<" | "<<map01[3][5]<<" | "<<map01[3][6]<<" | "<<map01[3][7]<<" | "<<map01[3][8]<<" | "<<map01[3][9]<<" |"<<endl;
       cout<<"     -----------------------------------------"<<endl;
       cout<<"  5  | "<<map01[4][0]<<" | "<<map01[4][1]<<" | "<<map01[4][2]<<" | "<<map01[4][3]<<" | "<<map01[4][4]<<" | "<<map01[4][5]<<" | "<<map01[4][6]<<" | "<<map01[4][7]<<" | "<<map01[4][8]<<" | "<<map01[4][9]<<" |"<<endl;
       cout<<"     -----------------------------------------"<<endl;
       cout<<"  6  | "<<map01[5][0]<<" | "<<map01[5][1]<<" | "<<map01[5][2]<<" | "<<map01[5][3]<<" | "<<map01[5][4]<<" | "<<map01[5][5]<<" | "<<map01[5][6]<<" | "<<map01[5][7]<<" | "<<map01[5][8]<<" | "<<map01[5][9]<<" |"<<endl;
       cout<<"     -----------------------------------------"<<endl;
       cout<<"  7  | "<<map01[6][0]<<" | "<<map01[6][1]<<" | "<<map01[6][2]<<" | "<<map01[6][3]<<" | "<<map01[6][4]<<" | "<<map01[6][5]<<" | "<<map01[6][6]<<" | "<<map01[6][7]<<" | "<<map01[6][8]<<" | "<<map01[6][9]<<" |"<<endl;
       cout<<"     -----------------------------------------"<<endl;
       cout<<"  8  | "<<map01[7][0]<<" | "<<map01[7][1]<<" | "<<map01[7][2]<<" | "<<map01[7][3]<<" | "<<map01[7][4]<<" | "<<map01[7][5]<<" | "<<map01[7][6]<<" | "<<map01[7][7]<<" | "<<map01[7][8]<<" | "<<map01[7][9]<<" |"<<endl;
       cout<<"     -----------------------------------------"<<endl;
       cout<<"  9  | "<<map01[8][0]<<" | "<<map01[8][1]<<" | "<<map01[8][2]<<" | "<<map01[8][3]<<" | "<<map01[8][4]<<" | "<<map01[8][5]<<" | "<<map01[8][6]<<" | "<<map01[8][7]<<" | "<<map01[8][8]<<" | "<<map01[8][9]<<" |"<<endl;
       cout<<"     -----------------------------------------"<<endl;
       cout<<"  10 | "<<map01[9][0]<<" | "<<map01[9][1]<<" | "<<map01[9][2]<<" | "<<map01[9][3]<<" | "<<map01[9][4]<<" | "<<map01[9][5]<<" | "<<map01[9][6]<<" | "<<map01[9][7]<<" | "<<map01[9][8]<<" | "<<map01[9][9]<<" |"<<endl;
       cout<<"     "<<A2[0]<<A2[1]<<A2[2]<<A2[3]<<A2[4]<<A2[5]<<A2[6]<<A2[7]<<A2[8]<<A2[9]
                    <<A2[10]<<A2[11]<<A2[12]<<A2[13]<<A2[14]<<A2[15]<<A2[16]<<A2[17]<<A2[18]<<A2[19]
                    <<A2[20]<<A2[21]<<A2[22]<<A2[23]<<A2[24]<<A2[25]<<A2[26]<<A2[27]<<A2[28]<<A2[29]
                    <<A2[30]<<A2[31]<<A2[32]<<A2[33]<<A2[34]<<A2[35]<<A2[36]<<A2[37]<<A2[38]<<A2[39]<<A2[40]<<endl;
   }
/////////////////////////////////////////////////////////////////////////////////////////////
   void Map8x8()
   {
       cout<<"       1   2   3   4   5   6   7   8"<<endl;
       cout<<"     "<<A1[0]<<A1[1]<<A1[2]<<A1[3]<<A1[4]<<A1[5]<<A1[6]<<A1[7]<<A1[8]<<A1[9]
                    <<A1[10]<<A1[11]<<A1[12]<<A1[13]<<A1[14]<<A1[15]<<A1[16]<<A1[17]<<A1[18]<<A1[19]
                    <<A1[20]<<A1[21]<<A1[22]<<A1[23]<<A1[24]<<A1[25]<<A1[26]<<A1[27]<<A1[28]<<A1[29]
                    <<A1[30]<<A1[31]<<A1[32]<<endl;
       cout<<"  1  | "<<map02[0][0]<<" | "<<map02[0][1]<<" | "<<map02[0][2]<<" | "<<map02[0][3]<<" | "<<map02[0][4]<<" | "<<map02[0][5]<<" | "<<map02[0][6]<<" | "<<map02[0][7]<<" |"<<endl;
       cout<<"     ---------------------------------"<<endl;
       cout<<"  2  | "<<map02[1][0]<<" | "<<map02[1][1]<<" | "<<map02[1][2]<<" | "<<map02[1][3]<<" | "<<map02[1][4]<<" | "<<map02[1][5]<<" | "<<map02[1][6]<<" | "<<map02[1][7]<<" |"<<endl;
       cout<<"     ---------------------------------"<<endl;
       cout<<"  3  | "<<map02[2][0]<<" | "<<map02[2][1]<<" | "<<map02[2][2]<<" | "<<map02[2][3]<<" | "<<map02[2][4]<<" | "<<map02[2][5]<<" | "<<map02[2][6]<<" | "<<map02[2][7]<<" |"<<endl;
       cout<<"     ---------------------------------"<<endl;
       cout<<"  4  | "<<map02[3][0]<<" | "<<map02[3][1]<<" | "<<map02[3][2]<<" | "<<map02[3][3]<<" | "<<map02[3][4]<<" | "<<map02[3][5]<<" | "<<map02[3][6]<<" | "<<map02[3][7]<<" |"<<endl;
       cout<<"     ---------------------------------"<<endl;
       cout<<"  5  | "<<map02[4][0]<<" | "<<map02[4][1]<<" | "<<map02[4][2]<<" | "<<map02[4][3]<<" | "<<map02[4][4]<<" | "<<map02[4][5]<<" | "<<map02[4][6]<<" | "<<map02[4][7]<<" |"<<endl;
       cout<<"     ---------------------------------"<<endl;
       cout<<"  6  | "<<map02[5][0]<<" | "<<map02[5][1]<<" | "<<map02[5][2]<<" | "<<map02[5][3]<<" | "<<map02[5][4]<<" | "<<map02[5][5]<<" | "<<map02[5][6]<<" | "<<map02[5][7]<<" |"<<endl;
       cout<<"     ---------------------------------"<<endl;
       cout<<"  7  | "<<map02[6][0]<<" | "<<map02[6][1]<<" | "<<map02[6][2]<<" | "<<map02[6][3]<<" | "<<map02[6][4]<<" | "<<map02[6][5]<<" | "<<map02[6][6]<<" | "<<map02[6][7]<<" |"<<endl;
       cout<<"     ---------------------------------"<<endl;
       cout<<"  8  | "<<map02[7][0]<<" | "<<map02[7][1]<<" | "<<map02[7][2]<<" | "<<map02[7][3]<<" | "<<map02[7][4]<<" | "<<map02[7][5]<<" | "<<map02[7][6]<<" | "<<map02[7][7]<<" |"<<endl;
       cout<<"     "<<A2[0]<<A2[1]<<A2[2]<<A2[3]<<A2[4]<<A2[5]<<A2[6]<<A2[7]<<A2[8]<<A2[9]
                    <<A2[10]<<A2[11]<<A2[12]<<A2[13]<<A2[14]<<A2[15]<<A2[16]<<A2[17]<<A2[18]<<A2[19]
                    <<A1[20]<<A1[21]<<A1[22]<<A1[23]<<A1[24]<<A1[25]<<A1[26]<<A1[27]<<A1[28]<<A1[29]
                    <<A1[30]<<A1[31]<<A1[32]<<endl;
   }

/////////////////////////////////////////////////////////////////////////////////////////////
   void Map6x6()
   {
       cout<<"       1   2   3   4   5   6"<<endl;
       cout<<"     "<<A1[0]<<A1[1]<<A1[2]<<A1[3]<<A1[4]<<A1[5]<<A1[6]<<A1[7]<<A1[8]<<A1[9]
                    <<A1[10]<<A1[11]<<A1[12]<<A1[13]<<A1[14]<<A1[15]<<A1[16]<<A1[17]<<A1[18]<<A1[19]
                    <<A1[20]<<A1[21]<<A1[22]<<A1[23]<<A1[24]<<endl;
       cout<<"  1  | "<<map03[0][0]<<" | "<<map03[0][1]<<" | "<<map03[0][2]<<" | "<<map03[0][3]<<" | "<<map03[0][4]<<" | "<<map03[0][5]<<" |"<<endl;
       cout<<"     -------------------------"<<endl;
       cout<<"  2  | "<<map03[1][0]<<" | "<<map03[1][1]<<" | "<<map03[1][2]<<" | "<<map03[1][3]<<" | "<<map03[1][4]<<" | "<<map03[1][5]<<" |"<<endl;
       cout<<"     -------------------------"<<endl;
       cout<<"  3  | "<<map03[2][0]<<" | "<<map03[2][1]<<" | "<<map03[2][2]<<" | "<<map03[2][3]<<" | "<<map03[2][4]<<" | "<<map03[2][5]<<" |"<<endl;
       cout<<"     -------------------------"<<endl;
       cout<<"  4  | "<<map03[3][0]<<" | "<<map03[3][1]<<" | "<<map03[3][2]<<" | "<<map03[3][3]<<" | "<<map03[3][4]<<" | "<<map03[3][5]<<" |"<<endl;
       cout<<"     -------------------------"<<endl;
       cout<<"  5  | "<<map03[4][0]<<" | "<<map03[4][1]<<" | "<<map03[4][2]<<" | "<<map03[4][3]<<" | "<<map03[4][4]<<" | "<<map03[4][5]<<" |"<<endl;
       cout<<"     -------------------------"<<endl;
       cout<<"  6  | "<<map03[5][0]<<" | "<<map03[5][1]<<" | "<<map03[5][2]<<" | "<<map03[5][3]<<" | "<<map03[5][4]<<" | "<<map03[5][5]<<" |"<<endl;
       cout<<"     "<<A2[0]<<A2[1]<<A2[2]<<A2[3]<<A2[4]<<A2[5]<<A2[6]<<A2[7]<<A2[8]<<A2[9]
                    <<A2[10]<<A2[11]<<A2[12]<<A2[13]<<A2[14]<<A2[15]<<A2[16]<<A2[17]<<A2[18]<<A2[19]
                    <<A2[20]<<A2[21]<<A2[22]<<A2[23]<<A2[24]<<endl;
   }

/////////////////////////////////////////////////////////////////////////////////////////////

int main()
{
    setlocale(LC_ALL, "");

    int V; // Выбор поля //

    string name1; // Игрок 1 //
    string name2; // Игрок 2 //

    int S1 = 0; // Счетчик Игрока 1 //
    int S2 = 0; // Счетчик Игрока 2 //

    int X01, Y01; // X и Y Для выбора шашки //
    int X02, Y02; // X и Y Для выбора места //

    int X11, Y11; // X и Y Для выбора шашки //
    int X12, Y12; // X и Y Для выбора места //

    cout<<"     ШАШКИ"<<endl;
    cout<<"\n  (#) - это белый"<<endl;
    cout<<"  (&) - это черный"<<endl;
    cout<<"\n  Игрок 1"<<endl;
    cout<<"  Введите ник: ";
     cin>>name1;
    cout<<"\n  Игрок 2"<<endl;
    cout<<"  Введите ник: ";
     cin>>name2;
    while (name1 == name2)
    {
        cleanboard();
        cout<<"     ШАШКИ"<<endl;
        cout<<"\n  (#) - это белый"<<endl;
        cout<<"  (&) - это черный"<<endl;
        cout<<"\n  Игрок 1"<<endl;
        cout<<"  Введите ник: "<<name1<<endl;
        cout<<"\n  Игрок 2"<<endl;
        cout<<"  Введите другой ник!"<<endl;
        cout<<"  Ввод: ";
         cin>>name2;
    }

    cout<<"\n  Укажите длину поля"<<endl;
    cout<<"  1 - (10x10)"<<endl;
    cout<<"  2 - (8x8)"<<endl;
    cout<<"  3 - (6x6)"<<endl;
    cout<<"  Ввод: ";
     cin>>V;
    while (V < 1 || V > 3)
    {
        cleanboard();
        cout<<"     ШАШКИ"<<endl;
        cout<<"\n  (#) - это белый"<<endl;
        cout<<"  (&) - это черный"<<endl;
        cout<<"\n  Игрок 1"<<endl;
        cout<<"  Hик: "<<name1<<endl;
        cout<<"\n  Игрок 2"<<endl;
        cout<<"  Ник: "<<name2<<endl;
        cout<<"\n  Укажите длину поля"<<endl;
        cout<<"  1 - (10x10)"<<endl;
        cout<<"  2 - (8x8)"<<endl;
        cout<<"  3 - (6x6)"<<endl;
        cout<<"  Ввод: ";
         cin>>V;
    }
switch (V)
{
///////////////////////////////////////////////////////////////////////////////////////
case 1:
{
    for (int i = 0; i < 1000000; i++)
    {
        if (i % 2 == 0)
        {
            cleanboard();
            Map10x10();
            cout<<"  Игрок "<<name1<<endl;
            cout<<"  Счет: "<<S1<<endl;
            cout<<"  Введите Х и Y (выбор шашки)"<<endl;
            cout<<"  Введите Х: ";
             cin>>X01;
            cout<<"  Введите Y: ";
             cin>>Y01;
             while (X01 < 1 || X01 > 10 || Y01 < 1 || Y01 > 10 || map01[X01 - 1][Y01 - 1] == '+'
                                                               || map01[X01 - 1][Y01 - 1] == '='
                                                               || map01[X01 - 1][Y01 - 1] == '&'
                                                               || map01[X01 - 1][Y01 - 1] == 'C')
             {
                 cleanboard();
                 Map10x10();
                 cout<<"  ERROR!"<<endl;
                 cout<<"  Игрок "<<name1<<endl;
                 cout<<"  Счет: "<<S1<<endl;
                 cout<<"  Введите Х и Y (выбор шашки)"<<endl;
                 cout<<"  Введите Х: ";
                  cin>>X01;
                 cout<<"  Введите Y: ";
                  cin>>Y01;
             }

/////////////////////////////////////////////////////////////////////////////////////
             if (map01[X01 - 1][Y01 - 1] == '#')
             {
                 ////////////////////////////////////
                 // Если выбранная шашка (обычная) //
                 ////////////////////////////////////

                 ///////////////////////////////////
                 if (map01[X01 - 2][Y01 - 2] == '=')
                 {map01[X01 - 2][Y01 - 2] = 'X';}
                 ////////////////////////////////
                 if (map01[X01 - 2][Y01] == '=')
                 {map01[X01 - 2][Y01] = 'X';}
                 ////////////////////////////////

             ///////////////////////////////////
             if (map01[X01 - 2][Y01 - 2] == '&' || map01[X01 - 2][Y01 - 2] == 'C')
             {
                 if (map01[X01 - 3][Y01 - 3] == '=')
                 {map01[X01 - 3][Y01 - 3] = '!';}///
                 /////////////////////////////////////////////////////////////////////
                 if (map01[X01 - 4][Y01 - 4] == '&' || map01[X01 - 4][Y01 - 4] == 'C')
                 {
                     if (map01[X01 - 5][Y01 - 5] == '=')
                     {map01[X01 - 5][Y01 - 5] = '!';}///
                     if (map01[X01 - 6][Y01 - 6] == '&' || map01[X01 - 6][Y01 - 6] == 'C')
                     {
                         if (map01[X01 - 7][Y01 - 7] == '=')
                         {map01[X01 - 7][Y01 - 7] = '!';}///
                         if (map01[X01 - 8][Y01 - 8] == '&' || map01[X01 - 8][Y01 - 8] == 'C')
                         {
                             if (map01[X01 - 9][Y01 - 9] == '=')
                             {map01[X01 - 9][Y01 - 9] = '!';}///
                         }
                     }
                 }
                 ///////////////////////////////////////////////////////////////////////
             }
             ////////////////////////////////
             if (map01[X01 - 2][Y01] == '&' || map01[X01 - 2][Y01] == 'C')
             {
                 if (map01[X01 - 3][Y01 + 1] == '=')
                 {map01[X01 - 3][Y01 + 1] = '!';}///
                 //////////////////////////////////////////////////////////////////////
                 if (map01[X01 - 4][Y01 + 2] == '&' || map01[X01 - 4][Y01 + 2] == 'C')
                 {
                     if (map01[X01 - 5][Y01 + 3] == '=')
                     {map01[X01 - 5][Y01 + 3] = '!';}///
                     if (map01[X01 - 6][Y01 + 4] == '&' || map01[X01 - 6][Y01 + 4] == 'C')
                     {
                         if (map01[X01 - 7][Y01 + 5] == '=')
                         {map01[X01 - 7][Y01 + 5] = '!';}///
                         if (map01[X01 - 8][Y01 + 6] == '&' || map01[X01 - 8][Y01 + 6] == 'C')
                         {
                             if (map01[X01 - 9][Y01 + 7] == '=')
                             {map01[X01 - 9][Y01 + 7] = '!';}///
                         }
                     }
                 }
                 /////////////////////////////////////////////////////////////////////////
             }
             ////////////////////////////////
             if (map01[X01][Y01 - 2] == '&' || map01[X01][Y01 - 2] == 'C')
             {
                 if (map01[X01 + 1][Y01 - 3] == '=')
                 {map01[X01 + 1][Y01 - 3] = '!';}///
                 //////////////////////////////////////////////////////////////////////
                 if (map01[X01 + 2][Y01 - 4] == '&' || map01[X01 + 2][Y01 - 4] == 'C')
                 {
                     if (map01[X01 + 3][Y01 - 5] == '=')
                     {map01[X01 + 3][Y01 - 5] = '!';}///
                     if (map01[X01 + 4][Y01 - 6] == '&' || map01[X01 + 4][Y01 - 6] == 'C')
                     {
                         if (map01[X01 + 5][Y01 - 7] == '=')
                         {map01[X01 + 5][Y01 - 7] = '!';}///
                         if (map01[X01 + 6][Y01 - 8] == '&' || map01[X01 + 6][Y01 - 8] == 'C')
                         {
                             if (map01[X01 + 7][Y01 - 9] == '=')
                             {map01[X01 + 7][Y01 - 9] = '!';}///
                         }
                     }
                 }
                 //////////////////////////////////////////////////////////////////////////
             }
             ////////////////////////////////
             if (map01[X01][Y01] == '&' || map01[X01][Y01] == 'C')
             {
                 if (map01[X01 + 1][Y01 + 1] == '=')
                 {map01[X01 + 1][Y01 + 1] = '!';}///
                 /////////////////////////////////////////////////////////////////////
                 if (map01[X01 + 2][Y01 + 2] == '&' || map01[X01 + 2][Y01 + 2] == 'C')
                 {
                     if (map01[X01 + 3][Y01 + 3] == '=')
                     {map01[X01 + 3][Y01 + 3] = '!';}///
                     if (map01[X01 + 4][Y01 + 4] == '&' || map01[X01 + 4][Y01 + 4] == 'C')
                     {
                         if (map01[X01 + 5][Y01 + 5] == '=')
                         {map01[X01 + 5][Y01 + 5] = '!';}///
                         if (map01[X01 + 6][Y01 + 6] == '&' || map01[X01 + 6][Y01 + 6] == 'C')
                         {
                             if (map01[X01 + 7][Y01 + 7] == '=')
                             {map01[X01 + 7][Y01 + 7] = '!';}///
                         }
                     }
                 }
                 /////////////////////////////////////////////////////////////////////////
             }
             ////////////////////////////////
             }
/////////////////////////////////////////////////////////////////////////////////////////

/////////////////////////////////////////////////////////////////////////////////////////
             else if (map01[X01 - 1][Y01 - 1] == 'B')
             {
                 //////////////////////////////////
                 // Если выбранная шашка (дамка) //
                 //////////////////////////////////
                 bool v1 = false;
                 for (int i = 0; i < 10; i++)
                 {
                     if (v1 == false)
                     {
                         if (map01[X01 - i - 1][Y01 - i - 1] == '=')
                         {map01[X01 - i - 1][Y01 - i - 1] = 'X';}
                     }
                     if (map01[X01 - i - 1][Y01 - i - 1] == '&' || map01[X01 - i - 1][Y01 - i - 1] == 'C')
                     {
                         if (map01[X01 - i - 2][Y01 - i - 2] != '=')
                         {break;}
                         v1 = true;}
                     else if (v1 == true)
                     {
                         if (map01[X01 - i - 1][Y01 - i - 1] == '=')
                         {map01[X01 - i - 1][Y01 - i - 1] = '!';}
                     }
                 }
                 ///////////////////////////////
                 bool v2 = false;
                 for (int i = 0; i < 10; i++)
                 {
                     if (v2 == false)
                     {
                         if (map01[X01 - i - 1][Y01 + i - 1] == '=')
                         {map01[X01 - i - 1][Y01 + i - 1] = 'X';}
                     }
                     if (map01[X01 - i - 1][Y01 + i - 1] == '&' || map01[X01 - i - 1][Y01 + i - 1] == 'C')
                     {
                         if (map01[X01 - i - 2][Y01 + i] != '=')
                         {break;}
                         v2 = true;}
                     else if (v2 == true)
                     {
                         if (map01[X01 - i - 1][Y01 + i - 1] == '=')
                         {map01[X01 - i - 1][Y01 + i - 1] = '!';}
                     }
                 }
                 ///////////////////////////////
                 bool v3 = false;
                 for (int i = 0; i < 10; i++)
                 {
                     if (v3 == false)
                     {
                         if (map01[X01 + i - 1][Y01 - i - 1] == '=')
                         {map01[X01 + i - 1][Y01 - i - 1] = 'X';}
                     }
                     if (map01[X01 + i - 1][Y01 - i - 1] == '&' || map01[X01 + i - 1][Y01 - i - 1] == 'C')
                     {
                         if (map01[X01 + i][Y01 - i - 2] != '=')
                         {break;}
                         v3 = true;}
                     else if (v3 == true)
                     {
                         if (map01[X01 + i - 1][Y01 - i - 1] == '=')
                         {map01[X01 + i - 1][Y01 - i - 1] = '!';}
                     }
                 }
                 ///////////////////////////////
                 bool v4 = false;
                 for (int i = 0; i < 10; i++)
                 {
                     if (v4 == false)
                     {
                         if (map01[X01 + i - 1][Y01 + i - 1] == '=')
                         {map01[X01 + i - 1][Y01 + i - 1] = 'X';}
                     }
                     if (map01[X01 + i][Y01 + i] == '&' || map01[X01 + i][Y01 + i] == 'C')
                     {
                         if (map01[X01 + i + 1][Y01 + i + 1] != '=')
                         {break;}
                         v4 = true;}
                     else if (v4 == true)
                     {
                         if (map01[X01 + i][Y01 + i] == '=')
                         {map01[X01 + i][Y01 + i] = '!';}
                     }
                 }
                 ///////////////////////////////
             }
//////////////////////////////////////////////////////////////////////////////////////////

             cleanboard();
             Map10x10();
             cout<<"  Игрок "<<name1<<endl;
             cout<<"  Счет: "<<S1<<endl;
            cout<<"  Введите Х и Y (куда поставить)"<<endl;
            cout<<"  Введите X: ";
             cin>>X02;
            cout<<"  Введите Y: ";
             cin>>Y02;
            while (X02 < 1 || X02 > 10 || Y02 < 1 || Y02 > 10 || map01[X02 - 1][Y02 - 1] == '+'
                                                              || map01[X02 - 1][Y02 - 1] == '='
                                                              || map01[X02 - 1][Y02 - 1] == '&'
                                                              || map01[X02 - 1][Y02 - 1] == 'C'
                                                              || map01[X02 - 1][Y02 - 1] == '#'
                                                              || map01[X02 - 1][Y02 - 1] == 'B')
            {
                 cleanboard();
                 Map10x10();
                 cout<<"  ERROR!"<<endl;
                 cout<<"  Игрок "<<name1<<endl;
                 cout<<"  Счет: "<<S1<<endl;
                 cout<<"  Введите Х и Y (куда поставить)"<<endl;
                 cout<<"  Введите Х: ";
                  cin>>X02;
                 cout<<"  Введите Y: ";
                  cin>>Y02;
            }

                 ////////////////////////////////////
                 // Убирание Х-ов по всем сторонам //
                 ////////////////////////////////////
                 for (int i = 0; i < 10; i++)
                 {
                     if (map01[X01 - i - 1][Y01 - i - 1] == 'X')
                     {map01[X01 - i - 1][Y01 - i - 1] = '=';}
                 }
                 ///////////////////////////////
                 for (int i = 0; i < 10; i++)
                 {
                     if (map01[X01 - i - 1][Y01 + i - 1] == 'X')
                     {map01[X01 - i - 1][Y01 + i - 1] = '=';}
                 }
                 ///////////////////////////////
                 for (int i = 0; i < 10; i++)
                 {
                     if (map01[X01 + i - 1][Y01 - i - 1] == 'X')
                     {map01[X01 + i - 1][Y01 - i - 1] = '=';}
                 }
                 ///////////////////////////////
                 for (int i = 0; i < 10; i++)
                 {
                     if (map01[X01 + i - 1][Y01 + i - 1] == 'X')
                     {map01[X01 + i - 1][Y01 + i - 1] = '=';}
                 }
                 ///////////////////////////////

//////////////////////////////////////////////////////////////////////////////////////////

                 /////////////////////////////////
                 // Убирание ! по всем сторонам //
                 /////////////////////////////////
                 for (int i = 0; i < 10; i++)
                 {
                     if (map01[X01 - i - 1][Y01 - i - 1] == '!')
                     {map01[X01 - i - 1][Y01 - i - 1] = '=';}
                 }
                 ///////////////////////////////
                 for (int i = 0; i < 10; i++)
                 {
                     if (map01[X01 - i - 1][Y01 + i - 1] == '!')
                     {map01[X01 - i - 1][Y01 + i - 1] = '=';}
                 }
                 ///////////////////////////////
                 for (int i = 0; i < 10; i++)
                 {
                     if (map01[X01 + i - 1][Y01 - i - 1] == '!')
                     {map01[X01 + i - 1][Y01 - i - 1] = '=';}
                 }
                 ///////////////////////////////
                 for (int i = 0; i < 10; i++)
                 {
                     if (map01[X01 + i - 1][Y01 + i - 1] == '!')
                     {map01[X01 + i - 1][Y01 + i - 1] = '=';}
                 }
                 ///////////////////////////////

//////////////////////////////////////////////////////////////////////////////////////////

                 ////////////////////////////////////////////
                 // Поиск на какой стороне поставили шашку //
                 ////////////////////////////////////////////
                 bool S01 = false;
                 if (X02 < X01 && Y02 < Y01)
                 {S01 = true;}
                 else
                 {S01 = false;}
                 ////////////////
                 bool S2 = false;
                 if (X02 < X01 && Y02 > Y01)
                 {S2 = true;}
                 else
                 {S2 = false;}
                 ////////////////
                 bool S3 = false;
                 if (X02 > X01 && Y02 < Y01)
                 {S3 = true;}
                 else
                 {S3 = false;}
                 ////////////////
                 bool S4 = false;
                 if (X02 > X01 && Y02 > Y01)
                 {S4 = true;}
                 else
                 {S4 = false;}
/////////////////////////////////////////////////////////////////////////////////////////////

             /////////////////////////////////////////
             // Поедание врагов и зачитывание очков //
             /////////////////////////////////////////
             if (S01 == true)
             {
             for (int i = 0; i < 10; i++)
             {
                 if (map01[X01 - i - 1][Y01 - i - 1] == '&' || map01[X01 - i - 1][Y01 - i - 1] == 'C')
                 {
                     S1++;
                     map01[X01 - i - 1][Y01 - i - 1] = '=';//
                 }
                 else if (X01 - i == X02 && Y01 - i == Y02)
                 {break;}
             }
             }

             else if (S2 == true)
             {
             for (int i = 0; i < 10; i++)
             {
                 if (map01[X01 - i - 1][Y01 + i - 1] == '&' || map01[X01 - i - 1][Y01 + i - 1] == 'C')
                 {
                     S1++;
                     map01[X01 - i - 1][Y01 + i - 1] = '=';//
                 }
                 else if (X01 - i == X02 && Y01 + i == Y02)
                 {break;}
             }
             }

             else if (S3 == true)
             {
             for (int i = 0; i < 10; i++)
             {
                 if (map01[X01 + i - 1][Y01 - i - 1] == '&' || map01[X01 + i - 1][Y01 - i - 1] == 'C')
                 {
                     S1++;
                     map01[X01 + i - 1][Y01 - i - 1] = '=';//
                 }
                 else if (X01 + i == X02 && Y01 - i == Y02)
                 {break;}
             }
             }

             else if (S4 == true)
             {
             for (int i = 0; i < 10; i++)
             {
                 if (map01[X01 + i][Y01 + i] == '&' || map01[X01 + i][Y01 + i] == 'C')
                 {
                     S1++;
                     map01[X01 + i][Y01 + i] = '=';//
                 }
                 else if (X01 + i + 1 == X02 && Y01 + i + 1 == Y02)
                 {break;}
             }
             }
///////////////////////////////////////////////////////////////////////////////////////////

            ///////////////////////////////////////////////////////////
            // Убирание выбранно шашки и вставание в указанное место //
            ///////////////////////////////////////////////////////////
            if (map01[X01 - 1][Y01 - 1] == '#')
            {map01[X01 - 1][Y01 - 1] = '=';
             map01[X02 - 1][Y02 - 1] = '#';}
            else if (map01[X01 - 1][Y01 - 1] == 'B')
            {map01[X01 - 1][Y01 - 1] = '=';
             map01[X02 - 1][Y02 - 1] = 'B';}
             ///////////////////////////////////////////

            ////////////////////////////////////////////////////////////////////////
            // Если шашка попадет на одно из этих мест, то она становиться дамкой //
            ////////////////////////////////////////////////////////////////////////
            if (map01[X02 - 1][Y02 - 1] == map01[0][1])
            {map01[0][1] = 'B';}
            else if (map01[X02 - 1][Y02 - 1] == map01[0][3])
            {map01[0][3] = 'B';}
            else if (map01[X02 - 1][Y02 - 1] == map01[0][5])
            {map01[0][5] = 'B';}
            else if (map01[X02 - 1][Y02 - 1] == map01[0][7])
            {map01[0][7] = 'B';}
            else if (map01[X02 - 1][Y02 - 1] == map01[0][9])
            {map01[0][9] = 'B';}
            /////////////////////////////////////////////

            if (S1 == 15)
            {
                cleanboard();
                Map10x10();
                cout<<"  Игрок "<<name1<<endl;
                cout<<"  Счет: "<<S1<<endl;
                cout<<"  Победил!!!"<<endl;
                return 0;
            }
        }
////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////
        else
        {   /////////////
            // Игрок 2 //
            /////////////
            cleanboard();
            Map10x10();
            cout<<"  Игрок "<<name2<<endl;
            cout<<"  Счет: "<<S2<<endl;
            cout<<"  Введите Х и Y (выбор шашки)"<<endl;
            cout<<"  Введите Х: ";
             cin>>X11;
            cout<<"  Введите Y: ";
             cin>>Y11;
             while (X11 < 1 || X11 > 10 || Y11 < 1 || Y11 > 10 || map01[X11 - 1][Y11 - 1] == '+'
                                                               || map01[X11 - 1][Y11 - 1] == '='
                                                               || map01[X11 - 1][Y11 - 1] == '#'
                                                               || map01[X11 - 1][Y11 - 1] == 'B')
             {
                 cleanboard();
                 Map10x10();
                 cout<<"  ERROR!"<<endl;
                 cout<<"  Игрок "<<name2<<endl;
                 cout<<"  Счет: "<<S2<<endl;
                 cout<<"  Введите Х и Y (выбор шашки)"<<endl;
                 cout<<"  Введите Х: ";
                  cin>>X11;
                 cout<<"  Введите Y: ";
                  cin>>Y11;
             }

/////////////////////////////////////////////////////////////////////////////////////
             if (map01[X11 - 1][Y11 - 1] == '&')
             {
                 ////////////////////////////////////
                 // Если выбранная шашка (обычная) //
                 ////////////////////////////////////

                 ///////////////////////////////////
                 if (map01[X11][Y11 - 2] == '=')
                 {map01[X11][Y11 - 2] = 'X';}
                 ////////////////////////////////
                 if (map01[X11][Y11] == '=')
                 {map01[X11][Y11] = 'X';}
                 ////////////////////////////////

             ///////////////////////////////////
             if (map01[X11 - 2][Y11 - 2] == '#' || map01[X11 - 2][Y11 - 2] == 'B')
             {
                 if (map01[X11 - 3][Y11 - 3] == '=')
                 {map01[X11 - 3][Y11 - 3] = '!';}///
                 /////////////////////////////////////////////////////////////////////
                 if (map01[X11 - 4][Y11 - 4] == '#' || map01[X11 - 4][Y11 - 4] == 'B')
                 {
                     if (map01[X11 - 5][Y11 - 5] == '=')
                     {map01[X11 - 5][Y11 - 5] = '!';}///
                     if (map01[X11 - 6][Y11 - 6] == '#' || map01[X11 - 6][Y11 - 6] == 'B')
                     {
                         if (map01[X11 - 7][Y11 - 7] == '=')
                         {map01[X11 - 7][Y11 - 7] = '!';}///
                         if (map01[X11 - 8][Y11 - 8] == '#' || map01[X11 - 8][Y11 - 8] == 'B')
                         {
                             if (map01[X11 - 9][Y11 - 9] == '=')
                             {map01[X11 - 9][Y11 - 9] = '!';}///
                         }
                     }
                 }
                 ///////////////////////////////////////////////////////////////////////
             }
             ////////////////////////////////
             if (map01[X11 - 2][Y11] == '#' || map01[X11 - 2][Y11] == 'B')
             {
                 if (map01[X11 - 3][Y11 + 1] == '=')
                 {map01[X11 - 3][Y11 + 1] = '!';}///
                 //////////////////////////////////////////////////////////////////////
                 if (map01[X11 - 4][Y11 + 2] == '#' || map01[X11 - 4][Y11 + 2] == 'B')
                 {
                     if (map01[X11 - 5][Y11 + 3] == '=')
                     {map01[X11 - 5][Y11 + 3] = '!';}///
                     if (map01[X11 - 6][Y11 + 4] == '#' || map01[X11 - 6][Y11 + 4] == 'B')
                     {
                         if (map01[X11 - 7][Y11 + 5] == '=')
                         {map01[X11 - 7][Y11 + 5] = '!';}///
                         if (map01[X11 - 8][Y11 + 6] == '#' || map01[X11 - 8][Y11 + 6] == 'B')
                         {
                             if (map01[X11 - 9][Y11 + 7] == '=')
                             {map01[X11 - 9][Y11 + 7] = '!';}///
                         }
                     }
                 }
                 /////////////////////////////////////////////////////////////////////////
             }
             ////////////////////////////////
             if (map01[X11][Y11 - 2] == '#' || map01[X11][Y11 - 2] == 'B')
             {
                 if (map01[X11 + 1][Y11 - 3] == '=')
                 {map01[X11 + 1][Y11 - 3] = '!';}///
                 //////////////////////////////////////////////////////////////////////
                 if (map01[X11 + 2][Y11 - 4] == '#' || map01[X11 + 2][Y11 - 4] == 'B')
                 {
                     if (map01[X11 + 3][Y11 - 5] == '=')
                     {map01[X11 + 3][Y11 - 5] = '!';}///
                     if (map01[X11 + 4][Y11 - 6] == '#' || map01[X11 + 4][Y11 - 6] == 'B')
                     {
                         if (map01[X11 + 5][Y11 - 7] == '=')
                         {map01[X11 + 5][Y11 - 7] = '!';}///
                         if (map01[X11 + 6][Y11 - 8] == '#' || map01[X11 + 6][Y11 - 8] == 'B')
                         {
                             if (map01[X11 + 7][Y11 - 9] == '=')
                             {map01[X11 + 7][Y11 - 9] = '!';}///
                         }
                     }
                 }
                 //////////////////////////////////////////////////////////////////////////
             }
             ////////////////////////////////
             if (map01[X11][Y11] == '#' || map01[X11][Y11] == 'B')
             {
                 if (map01[X11 + 1][Y11 + 1] == '=')
                 {map01[X11 + 1][Y11 + 1] = '!';}///
                 /////////////////////////////////////////////////////////////////////
                 if (map01[X11 + 2][Y11 + 2] == '#' || map01[X11 + 2][Y11 + 2] == 'B')
                 {
                     if (map01[X11 + 3][Y11 + 3] == '=')
                     {map01[X11 + 3][Y11 + 3] = '!';}///
                     if (map01[X11 + 4][Y11 + 4] == '#' || map01[X11 + 4][Y11 + 4] == 'B')
                     {
                         if (map01[X11 + 5][Y11 + 5] == '=')
                         {map01[X11 + 5][Y11 + 5] = '!';}///
                         if (map01[X11 + 6][Y11 + 6] == '#' || map01[X11 + 6][Y11 + 6] == 'B')
                         {
                             if (map01[X11 + 7][Y11 + 7] == '=')
                             {map01[X11 + 7][Y11 + 7] = '!';}///
                         }
                     }
                 }
                 /////////////////////////////////////////////////////////////////////////
             }
             ////////////////////////////////
             }
/////////////////////////////////////////////////////////////////////////////////////////

/////////////////////////////////////////////////////////////////////////////////////////
             else if (map01[X11 - 1][Y11 - 1] == 'C')
             { // Если выбранная шашка (дамка)
                 ///////////////////////////////
                 bool v1 = false;
                 for (int i = 0; i < 10; i++)
                 {
                     if (v1 == false)
                     {
                         if (map01[X11 - i - 1][Y11 - i - 1] == '=')
                         {map01[X11 - i - 1][Y11 - i - 1] = 'X';}
                     }
                     if (map01[X11 - i - 1][Y11 - i - 1] == '#' || map01[X11 - i - 1][Y11 - i - 1] == 'B')
                     {
                         if (map01[X11 - i - 2][Y11 - i - 2] != '=')
                         {break;}
                         v1 = true;}
                     else if (v1 == true)
                     {
                         if (map01[X11 - i - 1][Y11 - i - 1] == '=')
                         {map01[X11 - i - 1][Y11 - i - 1] = '!';}
                     }
                 }
                 ///////////////////////////////
                 bool v2 = false;
                 for (int i = 0; i < 10; i++)
                 {
                     if (v2 == false)
                     {
                         if (map01[X11 - i - 1][Y11 + i - 1] == '=')
                         {map01[X11 - i - 1][Y11 + i - 1] = 'X';}
                     }
                     if (map01[X11 - i - 1][Y11 + i - 1] == '#' || map01[X11 - i - 1][Y11 + i - 1] == 'B')
                     {
                         if (map01[X11 - i - 2][Y11 + i] != '=')
                         {break;}
                         v2 = true;}
                     else if (v2 == true)
                     {
                         if (map01[X11 - i - 1][Y11 + i - 1] == '=')
                         {map01[X11 - i - 1][Y11 + i - 1] = '!';}
                     }
                 }
                 ///////////////////////////////
                 bool v3 = false;
                 for (int i = 0; i < 10; i++)
                 {
                     if (v3 == false)
                     {
                         if (map01[X11 + i - 1][Y11 - i - 1] == '=')
                         {map01[X11 + i - 1][Y11 - i - 1] = 'X';}
                     }
                     if (map01[X11 + i - 1][Y11 - i - 1] == '#' || map01[X11 + i - 1][Y11 - i - 1] == 'B')
                     {
                         if (map01[X11 + i][Y11 - i - 2] != '=')
                         {break;}
                         v3 = true;}
                     else if (v3 == true)
                     {
                         if (map01[X11 + i - 1][Y11 - i - 1] == '=')
                         {map01[X11 + i - 1][Y11 - i - 1] = '!';}
                     }
                 }
                 ///////////////////////////////
                 bool v4 = false;
                 for (int i = -1; i < 10; i++)
                 {
                     if (v4 == false)
                     {
                         if (map01[X11 + i - 1][Y11 + i - 1] == '=')
                         {map01[X11 + i - 1][Y11 + i - 1] = 'X';}
                     }
                     if (map01[X11 + i][Y11 + i] == '#' || map01[X11 + i][Y11 + i] == 'B')
                     {
                         if (map01[X11 + i + 1][Y11 + i + 1] != '=')
                         {break;}
                         v4 = true;}
                     else if (v4 == true)
                     {
                         if (map01[X11 + i][Y11 + i] == '=')
                         {map01[X11 + i][Y11 + i] = '!';}
                     }
                 }
                 ///////////////////////////////
             }
//////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////

             cleanboard();
             Map10x10();
             cout<<"  Игрок "<<name2<<endl;
             cout<<"  Счет: "<<S2<<endl;
            cout<<"  Введите Х и Y (куда поставить)"<<endl;
            cout<<"  Введите X: ";
             cin>>X12;
            cout<<"  Введите Y: ";
             cin>>Y12;
            while (X12 < 1 || X12 > 10 || Y12 < 1 || Y12 > 10 || map01[X12 - 1][Y12 - 1] == '+'
                                                              || map01[X12 - 1][Y12 - 1] == '='
                                                              || map01[X12 - 1][Y12 - 1] == '&'
                                                              || map01[X12 - 1][Y12 - 1] == 'C'
                                                              || map01[X12 - 1][Y12 - 1] == '#'
                                                              || map01[X12 - 1][Y12 - 1] == 'B')
            {
                 cleanboard();
                 Map10x10();
                 cout<<"  ERROR!"<<endl;
                 cout<<"  Игрок "<<name2<<endl;
                 cout<<"  Счет: "<<S2<<endl;
                 cout<<"  Введите Х и Y (куда поставить)"<<endl;
                 cout<<"  Введите Х: ";
                  cin>>X12;
                 cout<<"  Введите Y: ";
                  cin>>Y12;
            }

                 ///////////////////////////////
                 // Убирание Х-ов по всем сторонам //
                 ///////////////////////////////
                 for (int i = 0; i < 10; i++)
                 {
                     if (map01[X11 - i - 1][Y11 - i - 1] == 'X')
                     {map01[X11 - i - 1][Y11 - i - 1] = '=';}
                 }
                 ///////////////////////////////
                 for (int i = 0; i < 10; i++)
                 {
                     if (map01[X11 - i - 1][Y11 + i - 1] == 'X')
                     {map01[X11 - i - 1][Y11 + i - 1] = '=';}
                 }
                 ///////////////////////////////
                 for (int i = 0; i < 10; i++)
                 {
                     if (map01[X11 + i - 1][Y11 - i - 1] == 'X')
                     {map01[X11 + i - 1][Y11 - i - 1] = '=';}
                 }
                 ///////////////////////////////
                 for (int i = 0; i < 10; i++)
                 {
                     if (map01[X11 + i - 1][Y11 + i - 1] == 'X')
                     {map01[X11 + i - 1][Y11 + i - 1] = '=';}
                 }
                 ///////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////
                 /////////////////////////////////
                 // Убирание ! по всем сторонам //
                 /////////////////////////////////
                 for (int i = 0; i < 10; i++)
                 {
                     if (map01[X11 - i - 1][Y11 - i - 1] == '!')
                     {map01[X11 - i - 1][Y11 - i - 1] = '=';}
                 }
                 ///////////////////////////////
                 for (int i = 0; i < 10; i++)
                 {
                     if (map01[X11 - i - 1][Y11 + i - 1] == '!')
                     {map01[X11 - i - 1][Y11 + i - 1] = '=';}
                 }
                 ///////////////////////////////
                 for (int i = 0; i < 10; i++)
                 {
                     if (map01[X11 + i - 1][Y11 - i - 1] == '!')
                     {map01[X11 + i - 1][Y11 - i - 1] = '=';}
                 }
                 ///////////////////////////////
                 for (int i = 0; i < 10; i++)
                 {
                     if (map01[X11 + i - 1][Y11 + i - 1] == '!')
                     {map01[X11 + i - 1][Y11 + i - 1] = '=';}
                 }
                 ///////////////////////////////

//////////////////////////////////////////////////////////////////////////////////////////

                 ////////////////////////////////////////////
                 // Поиск на какой стороне поставили шашку //
                 ////////////////////////////////////////////
                 bool S1 = false;
                 if (X12 < X11 && Y12 < Y11)
                 {S1 = true;
                  break;}
                 else
                 {S1 = false;}
                 ////////////////
                 bool S02 = false;
                 if (X12 < X11 && Y12 > Y11)
                 {S02 = true;
                  break;}
                 else
                 {S02 = false;}
                 ////////////////
                 bool S3 = false;
                 if (X12 > X11 && Y12 < Y11)
                 {S3 = true;
                  break;}
                 else
                 {S3 = false;}
                 ////////////////
                 bool S4 = false;
                 if (X12 > X11 && Y12 > Y11)
                 {S4 = true;
                  break;}
                 else
                 {S4 = false;}
/////////////////////////////////////////////////////////////////////////////////////////////

////////////////////////////////////////////////////////////////////////////////////////////

             /////////////////////////////////////////
             // Поедание врагов и зачитывание очков //
             /////////////////////////////////////////
             if (S1 == true)
             {
             for (int i = 0; i < 10; i++)
             {
                 if (map01[X11 - i - 1][Y11 - i - 1] == '#' || map01[X11 - i - 1][Y11 - i - 1] == 'B')
                 {
                     S2++;
                     map01[X11 - i - 1][Y11 - i - 1] = '=';//
                 }
                 else if (X11 - i == X12 && Y11 - i == Y12)
                 {break;}
             }
             }

             else if (S02 == true)
             {
             for (int i = 0; i < 10; i++)
             {
                 if (map01[X11 - i - 1][Y11 + i - 1] == '#' || map01[X11 - i - 1][Y11 + i - 1] == 'B')
                 {
                     S2++;
                     map01[X11 - i - 1][Y11 + i - 1] = '=';//
                 }
                 else if (X11 - i == X12 && Y11 + i == Y12)
                 {break;}
             }
             }

             else if (S3 == true)
             {
             for (int i = 0; i < 10; i++)
             {
                 if (map01[X11 + i - 1][Y11 - i - 1] == '#' || map01[X11 + i - 1][Y11 - i - 1] == 'B')
                 {
                     S2++;
                     map01[X11 + i - 1][Y11 - i - 1] = '=';//
                 }
                 else if (X11 + i == X12 && Y11 - i == Y12)
                 {break;}
             }
             }

             else if (S4 == true)
             {
             for (int i = 0; i < 10; i++)
             {
                 if (map01[X11 + i][Y11 + i] == '#' || map01[X11 + i][Y11 + i] == 'B')
                 {
                     S2++;
                     map01[X11 + i][Y11 + i] = '=';//
                 }
                 else if (X11 + i + 1 == X12 && Y11 + i + 1 == Y12)
                 {break;}
             }
             }
///////////////////////////////////////////////////////////////////////////////////////////

            ///////////////////////////////////////////////////////////
            // Убирание выбранно шашки и вставание в указанное место //
            ///////////////////////////////////////////////////////////
            if (map01[X11 - 1][Y11 - 1] == '&')
            {map01[X11 - 1][Y11 - 1] = '=';
             map01[X12 - 1][Y12 - 1] = '&';}
            else if (map01[X11 - 1][Y11 - 1] == 'C')
            {map01[X11 - 1][Y11 - 1] = '=';
             map01[X12 - 1][Y12 - 1] = 'C';}
             ///////////////////////////////////////////

            ////////////////////////////////////////////////////////////////////////
            // Если шашка попадет на одно из этих мест, то она становиться дамкой //
            ////////////////////////////////////////////////////////////////////////
            if (map01[X12 - 1][Y12 - 1] == map01[9][0])
            {map01[0][1] = 'C';}
            else if (map01[X12 - 1][Y12 - 1] == map01[9][2])
            {map01[0][3] = 'C';}
            else if (map01[X12 - 1][Y12 - 1] == map01[9][4])
            {map01[0][5] = 'C';}
            else if (map01[X12 - 1][Y12 - 1] == map01[9][6])
            {map01[0][7] = 'C';}
            else if (map01[X12 - 1][Y12 - 1] == map01[9][8])
            {map01[0][9] = 'C';}
            /////////////////////////////////////////////

            if (S2 == 15)
            {
                cleanboard();
                Map10x10();
                cout<<"  Игрок "<<name2<<endl;
                cout<<"  Счет: "<<S2<<endl;
                cout<<"  Победил!!!"<<endl;
                return 0;
            }
        }// ELSE //
    }// FOR //
} // CASE 1 //
break;
////////////////////////////////////////////////////////////////////////////////////////////
case 2:
{
    for (int i = 0; i < 1000000; i++)
    {
        if (i % 2 == 0)
        {
            cleanboard();
            Map8x8();
            cout<<"  Игрок "<<name1<<endl;
            cout<<"  Счет: "<<S1<<endl;
            cout<<"  Введите Х и Y (выбор шашки)"<<endl;
            cout<<"  Введите Х: ";
             cin>>X01;
            cout<<"  Введите Y: ";
             cin>>Y01;
             while (X01 < 1 || X01 > 10 || Y01 < 1 || Y01 > 10 || map02[X01 - 1][Y01 - 1] == '+'
                                                               || map02[X01 - 1][Y01 - 1] == '='
                                                               || map02[X01 - 1][Y01 - 1] == '&'
                                                               || map02[X01 - 1][Y01 - 1] == 'C')
             {
                 cleanboard();
                 Map8x8();
                 cout<<"  ERROR!"<<endl;
                 cout<<"  Игрок "<<name1<<endl;
                 cout<<"  Счет: "<<S1<<endl;
                 cout<<"  Введите Х и Y (выбор шашки)"<<endl;
                 cout<<"  Введите Х: ";
                  cin>>X01;
                 cout<<"  Введите Y: ";
                  cin>>Y01;
             }

/////////////////////////////////////////////////////////////////////////////////////
             if (map02[X01 - 1][Y01 - 1] == '#')
             {
                 ////////////////////////////////////
                 // Если выбранная шашка (обычная) //
                 ////////////////////////////////////

                 ///////////////////////////////////
                 if (map02[X01 - 2][Y01 - 2] == '=')
                 {map02[X01 - 2][Y01 - 2] = 'X';}
                 ////////////////////////////////
                 if (map02[X01 - 2][Y01] == '=')
                 {map02[X01 - 2][Y01] = 'X';}
                 ////////////////////////////////

             ///////////////////////////////////
             if (map02[X01 - 2][Y01 - 2] == '&' || map02[X01 - 2][Y01 - 2] == 'C')
             {
                 if (map02[X01 - 3][Y01 - 3] == '=')
                 {map02[X01 - 3][Y01 - 3] = '!';}///
                 /////////////////////////////////////////////////////////////////////
                 if (map02[X01 - 4][Y01 - 4] == '&' || map02[X01 - 4][Y01 - 4] == 'C')
                 {
                     if (map02[X01 - 5][Y01 - 5] == '=')
                     {map02[X01 - 5][Y01 - 5] = '!';}///
                     if (map02[X01 - 6][Y01 - 6] == '&' || map02[X01 - 6][Y01 - 6] == 'C')
                     {
                         if (map02[X01 - 7][Y01 - 7] == '=')
                         {map02[X01 - 7][Y01 - 7] = '!';}///
                         if (map02[X01 - 8][Y01 - 8] == '&' || map02[X01 - 8][Y01 - 8] == 'C')
                         {
                             if (map02[X01 - 9][Y01 - 9] == '=')
                             {map02[X01 - 9][Y01 - 9] = '!';}///
                         }
                     }
                 }
                 ///////////////////////////////////////////////////////////////////////
             }
             ////////////////////////////////
             if (map02[X01 - 2][Y01] == '&' || map02[X01 - 2][Y01] == 'C')
             {
                 if (map02[X01 - 3][Y01 + 1] == '=')
                 {map02[X01 - 3][Y01 + 1] = '!';}///
                 //////////////////////////////////////////////////////////////////////
                 if (map02[X01 - 4][Y01 + 2] == '&' || map02[X01 - 4][Y01 + 2] == 'C')
                 {
                     if (map02[X01 - 5][Y01 + 3] == '=')
                     {map02[X01 - 5][Y01 + 3] = '!';}///
                     if (map02[X01 - 6][Y01 + 4] == '&' || map02[X01 - 6][Y01 + 4] == 'C')
                     {
                         if (map02[X01 - 7][Y01 + 5] == '=')
                         {map02[X01 - 7][Y01 + 5] = '!';}///
                         if (map02[X01 - 8][Y01 + 6] == '&' || map02[X01 - 8][Y01 + 6] == 'C')
                         {
                             if (map02[X01 - 9][Y01 + 7] == '=')
                             {map02[X01 - 9][Y01 + 7] = '!';}///
                         }
                     }
                 }
                 /////////////////////////////////////////////////////////////////////////
             }
             ////////////////////////////////
             if (map02[X01][Y01 - 2] == '&' || map02[X01][Y01 - 2] == 'C')
             {
                 if (map02[X01 + 1][Y01 - 3] == '=')
                 {map02[X01 + 1][Y01 - 3] = '!';}///
                 //////////////////////////////////////////////////////////////////////
                 if (map02[X01 + 2][Y01 - 4] == '&' || map02[X01 + 2][Y01 - 4] == 'C')
                 {
                     if (map02[X01 + 3][Y01 - 5] == '=')
                     {map02[X01 + 3][Y01 - 5] = '!';}///
                     if (map02[X01 + 4][Y01 - 6] == '&' || map02[X01 + 4][Y01 - 6] == 'C')
                     {
                         if (map02[X01 + 5][Y01 - 7] == '=')
                         {map02[X01 + 5][Y01 - 7] = '!';}///
                         if (map02[X01 + 6][Y01 - 8] == '&' || map02[X01 + 6][Y01 - 8] == 'C')
                         {
                             if (map02[X01 + 7][Y01 - 9] == '=')
                             {map02[X01 + 7][Y01 - 9] = '!';}///
                         }
                     }
                 }
                 //////////////////////////////////////////////////////////////////////////
             }
             ////////////////////////////////
             if (map02[X01][Y01] == '&' || map02[X01][Y01] == 'C')
             {
                 if (map02[X01 + 1][Y01 + 1] == '=')
                 {map02[X01 + 1][Y01 + 1] = '!';}///
                 /////////////////////////////////////////////////////////////////////
                 if (map02[X01 + 2][Y01 + 2] == '&' || map02[X01 + 2][Y01 + 2] == 'C')
                 {
                     if (map02[X01 + 3][Y01 + 3] == '=')
                     {map02[X01 + 3][Y01 + 3] = '!';}///
                     if (map02[X01 + 4][Y01 + 4] == '&' || map02[X01 + 4][Y01 + 4] == 'C')
                     {
                         if (map02[X01 + 5][Y01 + 5] == '=')
                         {map02[X01 + 5][Y01 + 5] = '!';}///
                         if (map02[X01 + 6][Y01 + 6] == '&' || map02[X01 + 6][Y01 + 6] == 'C')
                         {
                             if (map02[X01 + 7][Y01 + 7] == '=')
                             {map02[X01 + 7][Y01 + 7] = '!';}///
                         }
                     }
                 }
                 /////////////////////////////////////////////////////////////////////////
             }
             ////////////////////////////////
             }
/////////////////////////////////////////////////////////////////////////////////////////

/////////////////////////////////////////////////////////////////////////////////////////
             else if (map02[X01 - 1][Y01 - 1] == 'B')
             {
                 //////////////////////////////////
                 // Если выбранная шашка (дамка) //
                 //////////////////////////////////
                 bool v1 = false;
                 for (int i = 0; i < 10; i++)
                 {
                     if (v1 == false)
                     {
                         if (map02[X01 - i - 1][Y01 - i - 1] == '=')
                         {map02[X01 - i - 1][Y01 - i - 1] = 'X';}
                     }
                     if (map02[X01 - i - 1][Y01 - i - 1] == '&' || map02[X01 - i - 1][Y01 - i - 1] == 'C')
                     {
                         if (map02[X01 - i - 2][Y01 - i - 2] != '=')
                         {break;}
                         v1 = true;}
                     else if (v1 == true)
                     {
                         if (map02[X01 - i - 1][Y01 - i - 1] == '=')
                         {map02[X01 - i - 1][Y01 - i - 1] = '!';}
                     }
                 }
                 ///////////////////////////////
                 bool v2 = false;
                 for (int i = 0; i < 10; i++)
                 {
                     if (v2 == false)
                     {
                         if (map02[X01 - i - 1][Y01 + i - 1] == '=')
                         {map02[X01 - i - 1][Y01 + i - 1] = 'X';}
                     }
                     if (map02[X01 - i - 1][Y01 + i - 1] == '&' || map02[X01 - i - 1][Y01 + i - 1] == 'C')
                     {
                         if (map02[X01 - i - 2][Y01 + i] != '=')
                         {break;}
                         v2 = true;}
                     else if (v2 == true)
                     {
                         if (map02[X01 - i - 1][Y01 + i - 1] == '=')
                         {map02[X01 - i - 1][Y01 + i - 1] = '!';}
                     }
                 }
                 ///////////////////////////////
                 bool v3 = false;
                 for (int i = 0; i < 10; i++)
                 {
                     if (v3 == false)
                     {
                         if (map02[X01 + i - 1][Y01 - i - 1] == '=')
                         {map02[X01 + i - 1][Y01 - i - 1] = 'X';}
                     }
                     if (map02[X01 + i - 1][Y01 - i - 1] == '&' || map02[X01 + i - 1][Y01 - i - 1] == 'C')
                     {
                         if (map02[X01 + i][Y01 - i - 2] != '=')
                         {break;}
                         v3 = true;}
                     else if (v3 == true)
                     {
                         if (map02[X01 + i - 1][Y01 - i - 1] == '=')
                         {map02[X01 + i - 1][Y01 - i - 1] = '!';}
                     }
                 }
                 ///////////////////////////////
                 bool v4 = false;
                 for (int i = -1; i < 10; i++)
                 {
                     if (v4 == false)
                     {
                         if (map02[X01 + i - 1][Y01 + i - 1] == '=')
                         {map02[X01 + i - 1][Y01 + i - 1] = 'X';}
                     }
                     if (map02[X01 + i][Y01 + i] == '&' || map02[X01 + i][Y01 + i] == 'C')
                     {
                         if (map02[X01 + i + 1][Y01 + i + 1] != '=')
                         {break;}
                         v4 = true;}
                     else if (v4 == true)
                     {
                         if (map02[X01 + i][Y01 + i] == '=')
                         {map02[X01 + i][Y01 + i] = '!';}
                     }
                 }
                 ///////////////////////////////
             }
//////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////

             cleanboard();
             Map8x8();
             cout<<"  Игрок "<<name1<<endl;
             cout<<"  Счет: "<<S1<<endl;
            cout<<"  Введите Х и Y (куда поставить)"<<endl;
            cout<<"  Введите X: ";
             cin>>X02;
            cout<<"  Введите Y: ";
             cin>>Y02;
            while (X02 < 1 || X02 > 10 || Y02 < 1 || Y02 > 10 || map02[X02 - 1][Y02 - 1] == '+'
                                                              || map02[X02 - 1][Y02 - 1] == '='
                                                              || map02[X02 - 1][Y02 - 1] == '&'
                                                              || map02[X02 - 1][Y02 - 1] == 'C'
                                                              || map02[X02 - 1][Y02 - 1] == '#'
                                                              || map02[X02 - 1][Y02 - 1] == 'B')
            {
                 cleanboard();
                 Map8x8();
                 cout<<"  ERROR!"<<endl;
                 cout<<"  Игрок "<<name1<<endl;
                 cout<<"  Счет: "<<S1<<endl;
                 cout<<"  Введите Х и Y (куда поставить)"<<endl;
                 cout<<"  Введите Х: ";
                  cin>>X02;
                 cout<<"  Введите Y: ";
                  cin>>Y02;
            }

                 ////////////////////////////////////
                 // Убирание Х-ов по всем сторонам //
                 ////////////////////////////////////
                 for (int i = 0; i < 8; i++)
                 {
                     if (map02[X01 - i - 1][Y01 - i - 1] == 'X')
                     {map02[X01 - i - 1][Y01 - i - 1] = '=';}
                 }
                 ///////////////////////////////
                 for (int i = 0; i < 8; i++)
                 {
                     if (map02[X01 - i - 1][Y01 + i - 1] == 'X')
                     {map02[X01 - i - 1][Y01 + i - 1] = '=';}
                 }
                 ///////////////////////////////
                 for (int i = 0; i < 8; i++)
                 {
                     if (map02[X01 + i - 1][Y01 - i - 1] == 'X')
                     {map02[X01 + i - 1][Y01 - i - 1] = '=';}
                 }
                 ///////////////////////////////
                 for (int i = 0; i < 8; i++)
                 {
                     if (map02[X01 + i - 1][Y01 + i - 1] == 'X')
                     {map02[X01 + i - 1][Y01 + i - 1] = '=';}
                 }
                 ///////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////
                 /////////////////////////////////
                 // Убирание ! по всем сторонам //
                 /////////////////////////////////
                 for (int i = 0; i < 8; i++)
                 {
                     if (map02[X01 - i - 1][Y01 - i - 1] == '!')
                     {map02[X01 - i - 1][Y01 - i - 1] = '=';}
                 }
                 ///////////////////////////////
                 for (int i = 0; i < 8; i++)
                 {
                     if (map02[X01 - i - 1][Y01 + i - 1] == '!')
                     {map02[X01 - i - 1][Y01 + i - 1] = '=';}
                 }
                 ///////////////////////////////
                 for (int i = 0; i < 8; i++)
                 {
                     if (map02[X01 + i - 1][Y01 - i - 1] == '!')
                     {map02[X01 + i - 1][Y01 - i - 1] = '=';}
                 }
                 ///////////////////////////////
                 for (int i = 0; i < 8; i++)
                 {
                     if (map02[X01 + i - 1][Y01 + i - 1] == '!')
                     {map02[X01 + i - 1][Y01 + i - 1] = '=';}
                 }
                 /////////////////////////////

//////////////////////////////////////////////////////////////////////////////////////////

                 ////////////////////////////////////////////
                 // Поиск на какой стороне поставили шашку //
                 ////////////////////////////////////////////
                 bool S01 = false;
                 for (int i = 0; i < 8; i++)
                 {
                     if (X02 < X01 && Y02 < Y01)
                     {S01 = true;
                      break;}
                     else
                     {S01 = false;}
                 }
                 ////////////////
                 bool S2 = false;
                 for (int i = 0; i < 8; i++)
                 {
                     if (X02 < X01 && Y02 > Y01)
                     {S2 = true;
                      break;}
                     else
                     {S2 = false;}
                 }
                 ////////////////
                 bool S3 = false;
                 for (int i = 0; i < 8; i++)
                 {
                     if (X02 > X01 && Y02 < Y01)
                     {S3 = true;
                      break;}
                     else
                     {S3 = false;}
                 }
                 ////////////////
                 bool S4 = false;
                 for (int i = 0; i < 8; i++)
                 {
                     if (X02 > X01 && Y02 > Y01)
                     {S4 = true;
                      break;}
                     else
                     {S4 = false;}
                 }
/////////////////////////////////////////////////////////////////////////////////////////////

////////////////////////////////////////////////////////////////////////////////////////////

             /////////////////////////////////////////
             // Поедание врагов и зачитывание очков //
             /////////////////////////////////////////
             if (S01 == true)
             {
             for (int i = 0; i < 8; i++)
             {
                 if (map02[X01 - i - 1][Y01 - i - 1] == '&' || map02[X01 - i - 1][Y01 - i - 1] == 'C')
                 {
                     S1++;
                     map02[X01 - i - 1][Y01 - i - 1] = '=';//
                 }
                 else if (X01 - i == X02 && Y01 - i == Y02)
                 {break;}
             }
             }

             else if (S2 == true)
             {
             for (int i = 0; i < 8; i++)
             {
                 if (map02[X01 - i - 1][Y01 + i - 1] == '&' || map02[X01 - i - 1][Y01 + i - 1] == 'C')
                 {
                     S1++;
                     map02[X01 - i - 1][Y01 + i - 1] = '=';//
                 }
                 else if (X01 - i == X02 && Y01 + i == Y02)
                 {break;}
             }
             }

             else if (S3 == true)
             {
             for (int i = 0; i < 8; i++)
             {
                 if (map02[X01 + i - 1][Y01 - i - 1] == '&' || map02[X01 + i - 1][Y01 - i - 1] == 'C')
                 {
                     S1++;
                     map02[X01 + i - 1][Y01 - i - 1] = '=';//
                 }
                 else if (X01 + i == X02 && Y01 - i == Y02)
                 {break;}
             }
             }

             else if (S4 == true)
             {
             for (int i = 0; i < 8; i++)
             {
                 if (map02[X01 + i][Y01 + i] == '&' || map02[X01 + i][Y01 + i] == 'C')
                 {
                     S1++;
                     map02[X01 + i][Y01 + i] = '=';//
                 }
                 else if (X01 + i + 1 == X02 && Y01 + i + 1 == Y02)
                 {break;}
             }
             }
///////////////////////////////////////////////////////////////////////////////////////////

            ///////////////////////////////////////////////////////////
            // Убирание выбранно шашки и вставание в указанное место //
            ///////////////////////////////////////////////////////////
            if (map02[X01 - 1][Y01 - 1] == '#')
            {map02[X01 - 1][Y01 - 1] = '=';
             map02[X02 - 1][Y02 - 1] = '#';}
            else if (map02[X01 - 1][Y01 - 1] == 'B')
            {map02[X01 - 1][Y01 - 1] = '=';
             map02[X02 - 1][Y02 - 1] = 'B';}
             /////////////////////////////////////////

            ////////////////////////////////////////////////////////////////////////
            // Если шашка попадет на одно из этих мест, то она становиться дамкой //
            ////////////////////////////////////////////////////////////////////////
            if (map02[X02 - 1][Y02 - 1] == map02[0][1])
            {map02[0][1] = 'B';}
            else if (map02[X02 - 1][Y02 - 1] == map02[0][3])
            {map02[0][3] = 'B';}
            else if (map02[X02 - 1][Y02 - 1] == map02[0][5])
            {map02[0][5] = 'B';}
            else if (map02[X02 - 1][Y02 - 1] == map02[0][7])
            {map02[0][7] = 'B';}
            /////////////////////////////////////////////

            if (S1 == 12)
            {
                cleanboard();
                Map8x8();
                cout<<"  Игрок "<<name1<<endl;
                cout<<"  Счет: "<<S1<<endl;
                cout<<"  Победил!!!"<<endl;
                return 0;
            }
        }
////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////
        else
        {   /////////////
            // Игрок 2 //
            /////////////
            cleanboard();
            Map8x8();
            cout<<"  Игрок "<<name2<<endl;
            cout<<"  Счет: "<<S2<<endl;
            cout<<"  Введите Х и Y (выбор шашки)"<<endl;
            cout<<"  Введите Х: ";
             cin>>X11;
            cout<<"  Введите Y: ";
             cin>>Y11;
             while (X11 < 1 || X11 > 10 || Y11 < 1 || Y11 > 10 || map02[X11 - 1][Y11 - 1] == '+'
                                                               || map02[X11 - 1][Y11 - 1] == '='
                                                               || map02[X11 - 1][Y11 - 1] == '#'
                                                               || map02[X11 - 1][Y11 - 1] == 'B')
             {
                 cleanboard();
                 Map8x8();
                 cout<<"  ERROR!"<<endl;
                 cout<<"  Игрок "<<name2<<endl;
                 cout<<"  Счет: "<<S2<<endl;
                 cout<<"  Введите Х и Y (выбор шашки)"<<endl;
                 cout<<"  Введите Х: ";
                  cin>>X11;
                 cout<<"  Введите Y: ";
                  cin>>Y11;
             }

/////////////////////////////////////////////////////////////////////////////////////
             if (map02[X11 - 1][Y11 - 1] == '&')
             {
                 ////////////////////////////////////
                 // Если выбранная шашка (обычная) //
                 ////////////////////////////////////

                 ///////////////////////////////////
                 if (map02[X11][Y11 - 2] == '=')
                 {map02[X11][Y11 - 2] = 'X';}
                 ////////////////////////////////
                 if (map02[X11][Y11] == '=')
                 {map02[X11][Y11] = 'X';}
                 ////////////////////////////////

             ///////////////////////////////////
             if (map02[X11 - 2][Y11 - 2] == '#' || map02[X11 - 2][Y11 - 2] == 'B')
             {
                 if (map02[X11 - 3][Y11 - 3] == '=')
                 {map02[X11 - 3][Y11 - 3] = '!';}///
                 /////////////////////////////////////////////////////////////////////
                 if (map02[X11 - 4][Y11 - 4] == '#' || map02[X11 - 4][Y11 - 4] == 'B')
                 {
                     if (map02[X11 - 5][Y11 - 5] == '=')
                     {map02[X11 - 5][Y11 - 5] = '!';}///
                     if (map02[X11 - 6][Y11 - 6] == '#' || map02[X11 - 6][Y11 - 6] == 'B')
                     {
                         if (map02[X11 - 7][Y11 - 7] == '=')
                         {map02[X11 - 7][Y11 - 7] = '!';}///
                         if (map02[X11 - 8][Y11 - 8] == '#' || map02[X11 - 8][Y11 - 8] == 'B')
                         {
                             if (map02[X11 - 9][Y11 - 9] == '=')
                             {map02[X11 - 9][Y11 - 9] = '!';}///
                         }
                     }
                 }
                 ///////////////////////////////////////////////////////////////////////
             }
             ////////////////////////////////
             if (map02[X11 - 2][Y11] == '#' || map02[X11 - 2][Y11] == 'B')
             {
                 if (map02[X11 - 3][Y11 + 1] == '=')
                 {map02[X11 - 3][Y11 + 1] = '!';}///
                 //////////////////////////////////////////////////////////////////////
                 if (map02[X11 - 4][Y11 + 2] == '#' || map02[X11 - 4][Y11 + 2] == 'B')
                 {
                     if (map02[X11 - 5][Y11 + 3] == '=')
                     {map02[X11 - 5][Y11 + 3] = '!';}///
                     if (map02[X11 - 6][Y11 + 4] == '#' || map02[X11 - 6][Y11 + 4] == 'B')
                     {
                         if (map02[X11 - 7][Y11 + 5] == '=')
                         {map02[X11 - 7][Y11 + 5] = '!';}///
                         if (map02[X11 - 8][Y11 + 6] == '#' || map02[X11 - 8][Y11 + 6] == 'B')
                         {
                             if (map02[X11 - 9][Y11 + 7] == '=')
                             {map02[X11 - 9][Y11 + 7] = '!';}///
                         }
                     }
                 }
                 /////////////////////////////////////////////////////////////////////////
             }
             ////////////////////////////////
             if (map02[X11][Y11 - 2] == '#' || map02[X11][Y11 - 2] == 'B')
             {
                 if (map02[X11 + 1][Y11 - 3] == '=')
                 {map02[X11 + 1][Y11 - 3] = '!';}///
                 //////////////////////////////////////////////////////////////////////
                 if (map02[X11 + 2][Y11 - 4] == '#' || map02[X11 + 2][Y11 - 4] == 'B')
                 {
                     if (map02[X11 + 3][Y11 - 5] == '=')
                     {map02[X11 + 3][Y11 - 5] = '!';}///
                     if (map02[X11 + 4][Y11 - 6] == '#' || map02[X11 + 4][Y11 - 6] == 'B')
                     {
                         if (map02[X11 + 5][Y11 - 7] == '=')
                         {map02[X11 + 5][Y11 - 7] = '!';}///
                         if (map02[X11 + 6][Y11 - 8] == '#' || map02[X11 + 6][Y11 - 8] == 'B')
                         {
                             if (map02[X11 + 7][Y11 - 9] == '=')
                             {map02[X11 + 7][Y11 - 9] = '!';}///
                         }
                     }
                 }
                 //////////////////////////////////////////////////////////////////////////
             }
             ////////////////////////////////
             if (map02[X11][Y11] == '#' || map02[X11][Y11] == 'B')
             {
                 if (map02[X11 + 1][Y11 + 1] == '=')
                 {map02[X11 + 1][Y11 + 1] = '!';}///
                 /////////////////////////////////////////////////////////////////////
                 if (map02[X11 + 2][Y11 + 2] == '#' || map02[X11 + 2][Y11 + 2] == 'B')
                 {
                     if (map02[X11 + 3][Y11 + 3] == '=')
                     {map02[X11 + 3][Y11 + 3] = '!';}///
                     if (map02[X11 + 4][Y11 + 4] == '#' || map02[X11 + 4][Y11 + 4] == 'B')
                     {
                         if (map02[X11 + 5][Y11 + 5] == '=')
                         {map02[X11 + 5][Y11 + 5] = '!';}///
                         if (map02[X11 + 6][Y11 + 6] == '#' || map02[X11 + 6][Y11 + 6] == 'B')
                         {
                             if (map02[X11 + 7][Y11 + 7] == '=')
                             {map02[X11 + 7][Y11 + 7] = '!';}///
                         }
                     }
                 }
                 /////////////////////////////////////////////////////////////////////////
             }
             ////////////////////////////////
             }
/////////////////////////////////////////////////////////////////////////////////////////

/////////////////////////////////////////////////////////////////////////////////////////
             else if (map02[X11 - 1][Y11 - 1] == 'C')
             { // Если выбранная шашка (дамка)
                 ///////////////////////////////
                 bool v1 = false;
                 for (int i = 0; i < 10; i++)
                 {
                     if (v1 == false)
                     {
                         if (map02[X11 - i - 1][Y11 - i - 1] == '=')
                         {map02[X11 - i - 1][Y11 - i - 1] = 'X';}
                     }
                     if (map02[X11 - i - 1][Y11 - i - 1] == '#' || map02[X11 - i - 1][Y11 - i - 1] == 'B')
                     {
                         if (map02[X11 - i - 2][Y11 - i - 2] != '=')
                         {break;}
                         v1 = true;}
                     else if (v1 == true)
                     {
                         if (map02[X11 - i - 1][Y11 - i - 1] == '=')
                         {map02[X11 - i - 1][Y11 - i - 1] = '!';}
                     }
                 }
                 ///////////////////////////////
                 bool v2 = false;
                 for (int i = 0; i < 10; i++)
                 {
                     if (v2 == false)
                     {
                         if (map02[X11 - i - 1][Y11 + i - 1] == '=')
                         {map02[X11 - i - 1][Y11 + i - 1] = 'X';}
                     }
                     if (map02[X11 - i - 1][Y11 + i - 1] == '#' || map02[X11 - i - 1][Y11 + i - 1] == 'B')
                     {
                         if (map02[X11 - i - 2][Y11 + i] != '=')
                         {break;}
                         v2 = true;}
                     else if (v2 == true)
                     {
                         if (map02[X11 - i - 1][Y11 + i - 1] == '=')
                         {map02[X11 - i - 1][Y11 + i - 1] = '!';}
                     }
                 }
                 ///////////////////////////////
                 bool v3 = false;
                 for (int i = 0; i < 10; i++)
                 {
                     if (v3 == false)
                     {
                         if (map02[X11 + i - 1][Y11 - i - 1] == '=')
                         {map02[X11 + i - 1][Y11 - i - 1] = 'X';}
                     }
                     if (map02[X11 + i - 1][Y11 - i - 1] == '#' || map02[X11 + i - 1][Y11 - i - 1] == 'B')
                     {
                         if (map02[X11 + i][Y11 - i - 2] != '=')
                         {break;}
                         v3 = true;}
                     else if (v3 == true)
                     {
                         if (map02[X11 + i - 1][Y11 - i - 1] == '=')
                         {map02[X11 + i - 1][Y11 - i - 1] = '!';}
                     }
                 }
                 ///////////////////////////////
                 bool v4 = false;
                 for (int i = -1; i < 10; i++)
                 {
                     if (v4 == false)
                     {
                         if (map02[X11 + i - 1][Y11 + i - 1] == '=')
                         {map02[X11 + i - 1][Y11 + i - 1] = 'X';}
                     }
                     if (map02[X11 + i][Y11 + i] == '#' || map02[X11 + i][Y11 + i] == 'B')
                     {
                         if (map02[X11 + i + 1][Y11 + i + 1] != '=')
                         {break;}
                         v4 = true;}
                     else if (v4 == true)
                     {
                         if (map02[X11 + i][Y11 + i] == '=')
                         {map02[X11 + i][Y11 + i] = '!';}
                     }
                 }
                 ///////////////////////////////
             }
//////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////

             cleanboard();
             Map8x8();
             cout<<"  Игрок "<<name2<<endl;
             cout<<"  Счет: "<<S2<<endl;
            cout<<"  Введите Х и Y (куда поставить)"<<endl;
            cout<<"  Введите X: ";
             cin>>X12;
            cout<<"  Введите Y: ";
             cin>>Y12;
            while (X12 < 1 || X12 > 10 || Y12 < 1 || Y12 > 10 || map02[X12 - 1][Y12 - 1] == '+'
                                                              || map02[X12 - 1][Y12 - 1] == '='
                                                              || map02[X12 - 1][Y12 - 1] == '&'
                                                              || map02[X12 - 1][Y12 - 1] == 'C'
                                                              || map02[X12 - 1][Y12 - 1] == '#'
                                                              || map02[X12 - 1][Y12 - 1] == 'B')
            {
                 cleanboard();
                 Map8x8();
                 cout<<"  ERROR!"<<endl;
                 cout<<"  Игрок "<<name2<<endl;
                 cout<<"  Счет: "<<S2<<endl;
                 cout<<"  Введите Х и Y (куда поставить)"<<endl;
                 cout<<"  Введите Х: ";
                  cin>>X12;
                 cout<<"  Введите Y: ";
                  cin>>Y12;
            }

                 ///////////////////////////////
                 // Убирание Х-ов по всем сторонам //
                 ///////////////////////////////
                 for (int i = 0; i < 10; i++)
                 {
                     if (map02[X11 - i - 1][Y11 - i - 1] == 'X')
                     {map02[X11 - i - 1][Y11 - i - 1] = '=';}
                 }
                 ///////////////////////////////
                 for (int i = 0; i < 10; i++)
                 {
                     if (map02[X11 - i - 1][Y11 + i - 1] == 'X')
                     {map02[X11 - i - 1][Y11 + i - 1] = '=';}
                 }
                 ///////////////////////////////
                 for (int i = 0; i < 10; i++)
                 {
                     if (map02[X11 + i - 1][Y11 - i - 1] == 'X')
                     {map02[X11 + i - 1][Y11 - i - 1] = '=';}
                 }
                 ///////////////////////////////
                 for (int i = 0; i < 10; i++)
                 {
                     if (map02[X11 + i - 1][Y11 + i - 1] == 'X')
                     {map02[X11 + i - 1][Y11 + i - 1] = '=';}
                 }
                 ///////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////
                 /////////////////////////////////
                 // Убирание ! по всем сторонам //
                 /////////////////////////////////
                 for (int i = 0; i < 10; i++)
                 {
                     if (map02[X11 - i - 1][Y11 - i - 1] == '!')
                     {map02[X11 - i - 1][Y11 - i - 1] = '=';}
                 }
                 ///////////////////////////////
                 for (int i = 0; i < 10; i++)
                 {
                     if (map02[X11 - i - 1][Y11 + i - 1] == '!')
                     {map02[X11 - i - 1][Y11 + i - 1] = '=';}
                 }
                 ///////////////////////////////
                 for (int i = 0; i < 10; i++)
                 {
                     if (map02[X11 + i - 1][Y11 - i - 1] == '!')
                     {map02[X11 + i - 1][Y11 - i - 1] = '=';}
                 }
                 ///////////////////////////////
                 for (int i = 0; i < 10; i++)
                 {
                     if (map02[X11 + i - 1][Y11 + i - 1] == '!')
                     {map02[X11 + i - 1][Y11 + i - 1] = '=';}
                 }
                 ///////////////////////////////

//////////////////////////////////////////////////////////////////////////////////////////

                 ////////////////////////////////////////////
                 // Поиск на какой стороне поставили шашку //
                 ////////////////////////////////////////////
                 bool S1 = false;
                 for (int i = 0; i < 10; i++)
                 {
                     if (X12 < X11 && Y12 < Y11)
                     {S1 = true;
                      break;}
                     else
                     {S1 = false;}
                 }
                 ////////////////
                 bool S02 = false;
                 for (int i = 0; i < 10; i++)
                 {
                     if (X12 < X11 && Y12 > Y11)
                     {S02 = true;
                      break;}
                     else
                     {S02 = false;}
                 }
                 ////////////////
                 bool S3 = false;
                 for (int i = 0; i < 10; i++)
                 {
                     if (X12 > X11 && Y12 < Y11)
                     {S3 = true;
                      break;}
                     else
                     {S3 = false;}
                 }
                 ////////////////
                 bool S4 = false;
                 for (int i = 0; i < 10; i++)
                 {
                     if (X12 > X11 && Y12 > Y11)
                     {S4 = true;
                      break;}
                     else
                     {S4 = false;}
                 }
/////////////////////////////////////////////////////////////////////////////////////////////

////////////////////////////////////////////////////////////////////////////////////////////

             /////////////////////////////////////////
             // Поедание врагов и зачитывание очков //
             /////////////////////////////////////////
             if (S1 == true)
             {
             for (int i = 0; i < 10; i++)
             {
                 if (map02[X11 - i - 1][Y11 - i - 1] == '#' || map02[X11 - i - 1][Y11 - i - 1] == 'B')
                 {
                     S2++;
                     map02[X11 - i - 1][Y11 - i - 1] = '=';//
                 }
                 else if (X11 - i == X12 && Y11 - i == Y12)
                 {break;}
             }
             }

             else if (S02 == true)
             {
             for (int i = 0; i < 10; i++)
             {
                 if (map02[X11 - i - 1][Y11 + i - 1] == '#' || map02[X11 - i - 1][Y11 + i - 1] == 'B')
                 {
                     S2++;
                     map02[X11 - i - 1][Y11 + i - 1] = '=';//
                 }
                 else if (X11 - i == X12 && Y11 + i == Y12)
                 {break;}
             }
             }

             else if (S3 == true)
             {
             for (int i = 0; i < 10; i++)
             {
                 if (map02[X11 + i - 1][Y11 - i - 1] == '#' || map02[X11 + i - 1][Y11 - i - 1] == 'B')
                 {
                     S2++;
                     map02[X11 + i - 1][Y11 - i - 1] = '=';//
                 }
                 else if (X11 + i == X12 && Y11 - i == Y12)
                 {break;}
             }
             }

             else if (S4 == true)
             {
             for (int i = 0; i < 10; i++)
             {
                 if (map02[X11 + i][Y11 + i] == '#' || map02[X11 + i][Y11 + i] == 'B')
                 {
                     S2++;
                     map02[X11 + i][Y11 + i] = '=';//
                 }
                 else if (X11 + i + 1 == X12 && Y11 + i + 1 == Y12)
                 {break;}
             }
             }
///////////////////////////////////////////////////////////////////////////////////////////

            ///////////////////////////////////////////////////////////
            // Убирание выбранно шашки и вставание в указанное место //
            ///////////////////////////////////////////////////////////
            if (map02[X11 - 1][Y11 - 1] == '&')
            {map02[X11 - 1][Y11 - 1] = '=';
             map02[X12 - 1][Y12 - 1] = '&';}
            else if (map02[X11 - 1][Y11 - 1] == 'C')
            {map02[X11 - 1][Y11 - 1] = '=';
             map02[X12 - 1][Y12 - 1] = 'C';}
             ///////////////////////////////////////////

            ////////////////////////////////////////////////////////////////////////
            // Если шашка попадет на одно из этих мест, то она становиться дамкой //
            ////////////////////////////////////////////////////////////////////////
            if (map02[X12 - 1][Y12 - 1] == map02[7][0])
            {map02[0][1] = 'C';}
            else if (map02[X12 - 1][Y12 - 1] == map02[7][2])
            {map02[0][3] = 'C';}
            else if (map02[X12 - 1][Y12 - 1] == map02[7][4])
            {map02[0][5] = 'C';}
            else if (map02[X12 - 1][Y12 - 1] == map02[7][6])
            {map02[0][7] = 'C';}
            /////////////////////////////////////////////

            if (S2 == 12)
            {
                cleanboard();
                Map8x8();
                cout<<"  Игрок "<<name2<<endl;
                cout<<"  Счет: "<<S2<<endl;
                cout<<"  Победил!!!"<<endl;
                return 0;
            }
        }// ELSE //
    }// FOR //
} // CASE 2 //
break;
////////////////////////////////////////////////////////////////////////////////////////////
case 3:
{
    for (int i = 0; i < 1000000; i++)
    {
        if (i % 2 == 0)
        {
            cleanboard();
            Map6x6();
            cout<<"  Игрок "<<name1<<endl;
            cout<<"  Счет: "<<S1<<endl;
            cout<<"  Введите Х и Y (выбор шашки)"<<endl;
            cout<<"  Введите Х: ";
             cin>>X01;
            cout<<"  Введите Y: ";
             cin>>Y01;
             while (X01 < 1 || X01 > 10 || Y01 < 1 || Y01 > 10 || map03[X01 - 1][Y01 - 1] == '+'
                                                               || map03[X01 - 1][Y01 - 1] == '='
                                                               || map03[X01 - 1][Y01 - 1] == '&'
                                                               || map03[X01 - 1][Y01 - 1] == 'C')
             {
                 cleanboard();
                 Map6x6();
                 cout<<"  ERROR!"<<endl;
                 cout<<"  Игрок "<<name1<<endl;
                 cout<<"  Счет: "<<S1<<endl;
                 cout<<"  Введите Х и Y (выбор шашки)"<<endl;
                 cout<<"  Введите Х: ";
                  cin>>X01;
                 cout<<"  Введите Y: ";
                  cin>>Y01;
             }

/////////////////////////////////////////////////////////////////////////////////////
             if (map03[X01 - 1][Y01 - 1] == '#')
             {
                 ////////////////////////////////////
                 // Если выбранная шашка (обычная) //
                 ////////////////////////////////////

                 ///////////////////////////////////
                 if (map03[X01 - 2][Y01 - 2] == '=')
                 {map03[X01 - 2][Y01 - 2] = 'X';}
                 ////////////////////////////////
                 if (map03[X01 - 2][Y01] == '=')
                 {map03[X01 - 2][Y01] = 'X';}
                 ////////////////////////////////

             ///////////////////////////////////
             if (map03[X01 - 2][Y01 - 2] == '&' || map03[X01 - 2][Y01 - 2] == 'C')
             {
                 if (map03[X01 - 3][Y01 - 3] == '=')
                 {map03[X01 - 3][Y01 - 3] = '!';}///
                 /////////////////////////////////////////////////////////////////////
                 if (map03[X01 - 4][Y01 - 4] == '&' || map03[X01 - 4][Y01 - 4] == 'C')
                 {
                     if (map03[X01 - 5][Y01 - 5] == '=')
                     {map03[X01 - 5][Y01 - 5] = '!';}///
                     if (map03[X01 - 6][Y01 - 6] == '&' || map03[X01 - 6][Y01 - 6] == 'C')
                     {
                         if (map03[X01 - 7][Y01 - 7] == '=')
                         {map03[X01 - 7][Y01 - 7] = '!';}///
                         if (map03[X01 - 8][Y01 - 8] == '&' || map03[X01 - 8][Y01 - 8] == 'C')
                         {
                             if (map03[X01 - 9][Y01 - 9] == '=')
                             {map03[X01 - 9][Y01 - 9] = '!';}///
                         }
                     }
                 }
                 ///////////////////////////////////////////////////////////////////////
             }
             ////////////////////////////////
             if (map03[X01 - 2][Y01] == '&' || map03[X01 - 2][Y01] == 'C')
             {
                 if (map03[X01 - 3][Y01 + 1] == '=')
                 {map03[X01 - 3][Y01 + 1] = '!';}///
                 //////////////////////////////////////////////////////////////////////
                 if (map03[X01 - 4][Y01 + 2] == '&' || map03[X01 - 4][Y01 + 2] == 'C')
                 {
                     if (map03[X01 - 5][Y01 + 3] == '=')
                     {map03[X01 - 5][Y01 + 3] = '!';}///
                     if (map03[X01 - 6][Y01 + 4] == '&' || map03[X01 - 6][Y01 + 4] == 'C')
                     {
                         if (map03[X01 - 7][Y01 + 5] == '=')
                         {map03[X01 - 7][Y01 + 5] = '!';}///
                         if (map03[X01 - 8][Y01 + 6] == '&' || map03[X01 - 8][Y01 + 6] == 'C')
                         {
                             if (map03[X01 - 9][Y01 + 7] == '=')
                             {map03[X01 - 9][Y01 + 7] = '!';}///
                         }
                     }
                 }
                 /////////////////////////////////////////////////////////////////////////
             }
             ////////////////////////////////
             if (map03[X01][Y01 - 2] == '&' || map03[X01][Y01 - 2] == 'C')
             {
                 if (map03[X01 + 1][Y01 - 3] == '=')
                 {map03[X01 + 1][Y01 - 3] = '!';}///
                 //////////////////////////////////////////////////////////////////////
                 if (map03[X01 + 2][Y01 - 4] == '&' || map03[X01 + 2][Y01 - 4] == 'C')
                 {
                     if (map03[X01 + 3][Y01 - 5] == '=')
                     {map03[X01 + 3][Y01 - 5] = '!';}///
                     if (map03[X01 + 4][Y01 - 6] == '&' || map03[X01 + 4][Y01 - 6] == 'C')
                     {
                         if (map03[X01 + 5][Y01 - 7] == '=')
                         {map03[X01 + 5][Y01 - 7] = '!';}///
                         if (map03[X01 + 6][Y01 - 8] == '&' || map03[X01 + 6][Y01 - 8] == 'C')
                         {
                             if (map03[X01 + 7][Y01 - 9] == '=')
                             {map03[X01 + 7][Y01 - 9] = '!';}///
                         }
                     }
                 }
                 //////////////////////////////////////////////////////////////////////////
             }
             ////////////////////////////////
             if (map03[X01][Y01] == '&' || map03[X01][Y01] == 'C')
             {
                 if (map03[X01 + 1][Y01 + 1] == '=')
                 {map03[X01 + 1][Y01 + 1] = '!';}///
                 /////////////////////////////////////////////////////////////////////
                 if (map03[X01 + 2][Y01 + 2] == '&' || map03[X01 + 2][Y01 + 2] == 'C')
                 {
                     if (map03[X01 + 3][Y01 + 3] == '=')
                     {map03[X01 + 3][Y01 + 3] = '!';}///
                     if (map03[X01 + 4][Y01 + 4] == '&' || map03[X01 + 4][Y01 + 4] == 'C')
                     {
                         if (map03[X01 + 5][Y01 + 5] == '=')
                         {map03[X01 + 5][Y01 + 5] = '!';}///
                         if (map03[X01 + 6][Y01 + 6] == '&' || map03[X01 + 6][Y01 + 6] == 'C')
                         {
                             if (map03[X01 + 7][Y01 + 7] == '=')
                             {map03[X01 + 7][Y01 + 7] = '!';}///
                         }
                     }
                 }
                 /////////////////////////////////////////////////////////////////////////
             }
             ////////////////////////////////
             }
/////////////////////////////////////////////////////////////////////////////////////////

/////////////////////////////////////////////////////////////////////////////////////////
             else if (map03[X01 - 1][Y01 - 1] == 'B')
             {
                 //////////////////////////////////
                 // Если выбранная шашка (дамка) //
                 //////////////////////////////////
                 bool v1 = false;
                 for (int i = 0; i < 10; i++)
                 {
                     if (v1 == false)
                     {
                         if (map03[X01 - i - 1][Y01 - i - 1] == '=')
                         {map03[X01 - i - 1][Y01 - i - 1] = 'X';}
                     }
                     if (map03[X01 - i - 1][Y01 - i - 1] == '&' || map03[X01 - i - 1][Y01 - i - 1] == 'C')
                     {
                         if (map03[X01 - i - 2][Y01 - i - 2] != '=')
                         {break;}
                         v1 = true;}
                     else if (v1 == true)
                     {
                         if (map03[X01 - i - 1][Y01 - i - 1] == '=')
                         {map03[X01 - i - 1][Y01 - i - 1] = '!';}
                     }
                 }
                 ///////////////////////////////
                 bool v2 = false;
                 for (int i = 0; i < 10; i++)
                 {
                     if (v2 == false)
                     {
                         if (map03[X01 - i - 1][Y01 + i - 1] == '=')
                         {map03[X01 - i - 1][Y01 + i - 1] = 'X';}
                     }
                     if (map03[X01 - i - 1][Y01 + i - 1] == '&' || map03[X01 - i - 1][Y01 + i - 1] == 'C')
                     {
                         if (map03[X01 - i - 2][Y01 + i] != '=')
                         {break;}
                         v2 = true;}
                     else if (v2 == true)
                     {
                         if (map03[X01 - i - 1][Y01 + i - 1] == '=')
                         {map03[X01 - i - 1][Y01 + i - 1] = '!';}
                     }
                 }
                 ///////////////////////////////
                 bool v3 = false;
                 for (int i = 0; i < 10; i++)
                 {
                     if (v3 == false)
                     {
                         if (map03[X01 + i - 1][Y01 - i - 1] == '=')
                         {map03[X01 + i - 1][Y01 - i - 1] = 'X';}
                     }
                     if (map03[X01 + i - 1][Y01 - i - 1] == '&' || map03[X01 + i - 1][Y01 - i - 1] == 'C')
                     {
                         if (map03[X01 + i][Y01 - i - 2] != '=')
                         {break;}
                         v3 = true;}
                     else if (v3 == true)
                     {
                         if (map03[X01 + i - 1][Y01 - i - 1] == '=')
                         {map03[X01 + i - 1][Y01 - i - 1] = '!';}
                     }
                 }
                 ///////////////////////////////
                 bool v4 = false;
                 for (int i = -1; i < 10; i++)
                 {
                     if (v4 == false)
                     {
                         if (map03[X01 + i - 1][Y01 + i - 1] == '=')
                         {map03[X01 + i - 1][Y01 + i - 1] = 'X';}
                     }
                     if (map03[X01 + i][Y01 + i] == '&' || map03[X01 + i][Y01 + i] == 'C')
                     {
                         if (map03[X01 + i + 1][Y01 + i + 1] != '=')
                         {break;}
                         v4 = true;}
                     else if (v4 == true)
                     {
                         if (map03[X01 + i][Y01 + i] == '=')
                         {map03[X01 + i][Y01 + i] = '!';}
                     }
                 }
                 ///////////////////////////////
             }
//////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////

             cleanboard();
             Map6x6();
             cout<<"  Игрок "<<name1<<endl;
             cout<<"  Счет: "<<S1<<endl;
            cout<<"  Введите Х и Y (куда поставить)"<<endl;
            cout<<"  Введите X: ";
             cin>>X02;
            cout<<"  Введите Y: ";
             cin>>Y02;
            while (X02 < 1 || X02 > 10 || Y02 < 1 || Y02 > 10 || map03[X02 - 1][Y02 - 1] == '+'
                                                              || map03[X02 - 1][Y02 - 1] == '='
                                                              || map03[X02 - 1][Y02 - 1] == '&'
                                                              || map03[X02 - 1][Y02 - 1] == 'C'
                                                              || map03[X02 - 1][Y02 - 1] == '#'
                                                              || map03[X02 - 1][Y02 - 1] == 'B')
            {
                 cleanboard();
                 Map6x6();
                 cout<<"  ERROR!"<<endl;
                 cout<<"  Игрок "<<name1<<endl;
                 cout<<"  Счет: "<<S1<<endl;
                 cout<<"  Введите Х и Y (куда поставить)"<<endl;
                 cout<<"  Введите Х: ";
                  cin>>X02;
                 cout<<"  Введите Y: ";
                  cin>>Y02;
            }

                 ////////////////////////////////////
                 // Убирание Х-ов по всем сторонам //
                 ////////////////////////////////////
                 for (int i = 0; i < 10; i++)
                 {
                     if (map03[X01 - i - 1][Y01 - i - 1] == 'X')
                     {map03[X01 - i - 1][Y01 - i - 1] = '=';}
                 }
                 ///////////////////////////////
                 for (int i = 0; i < 10; i++)
                 {
                     if (map03[X01 - i - 1][Y01 + i - 1] == 'X')
                     {map03[X01 - i - 1][Y01 + i - 1] = '=';}
                 }
                 ///////////////////////////////
                 for (int i = 0; i < 10; i++)
                 {
                     if (map03[X01 + i - 1][Y01 - i - 1] == 'X')
                     {map03[X01 + i - 1][Y01 - i - 1] = '=';}
                 }
                 ///////////////////////////////
                 for (int i = 0; i < 10; i++)
                 {
                     if (map03[X01 + i - 1][Y01 + i - 1] == 'X')
                     {map03[X01 + i - 1][Y01 + i - 1] = '=';}
                 }
                 ///////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////
                 /////////////////////////////////
                 // Убирание ! по всем сторонам //
                 /////////////////////////////////
                 for (int i = 0; i < 10; i++)
                 {
                     if (map03[X01 - i - 1][Y01 - i - 1] == '!')
                     {map03[X01 - i - 1][Y01 - i - 1] = '=';}
                 }
                 ///////////////////////////////
                 for (int i = 0; i < 10; i++)
                 {
                     if (map03[X01 - i - 1][Y01 + i - 1] == '!')
                     {map03[X01 - i - 1][Y01 + i - 1] = '=';}
                 }
                 ///////////////////////////////
                 for (int i = 0; i < 10; i++)
                 {
                     if (map03[X01 + i - 1][Y01 - i - 1] == '!')
                     {map03[X01 + i - 1][Y01 - i - 1] = '=';}
                 }
                 ///////////////////////////////
                 for (int i = 0; i < 10; i++)
                 {
                     if (map03[X01 + i - 1][Y01 + i - 1] == '!')
                     {map03[X01 + i - 1][Y01 + i - 1] = '=';}
                 }
                 ///////////////////////////////

//////////////////////////////////////////////////////////////////////////////////////////

                 ////////////////////////////////////////////
                 // Поиск на какой стороне поставили шашку //
                 ////////////////////////////////////////////
                 bool S01 = false;
                 for (int i = 0; i < 10; i++)
                 {
                     if (X02 < X01 && Y02 < Y01)
                     {S01 = true;
                      break;}
                     else
                     {S01 = false;}
                 }
                 ////////////////
                 bool S2 = false;
                 for (int i = 0; i < 10; i++)
                 {
                     if (X02 < X01 && Y02 > Y01)
                     {S2 = true;
                      break;}
                     else
                     {S2 = false;}
                 }
                 ////////////////
                 bool S3 = false;
                 for (int i = 0; i < 10; i++)
                 {
                     if (X02 > X01 && Y02 < Y01)
                     {S3 = true;
                      break;}
                     else
                     {S3 = false;}
                 }
                 ////////////////
                 bool S4 = false;
                 for (int i = 0; i < 10; i++)
                 {
                     if (X02 > X01 && Y02 > Y01)
                     {S4 = true;
                      break;}
                     else
                     {S4 = false;}
                 }
/////////////////////////////////////////////////////////////////////////////////////////////

////////////////////////////////////////////////////////////////////////////////////////////

             /////////////////////////////////////////
             // Поедание врагов и зачитывание очков //
             /////////////////////////////////////////
             if (S01 == true)
             {
             for (int i = 0; i < 10; i++)
             {
                 if (map03[X01 - i - 1][Y01 - i - 1] == '&' || map03[X01 - i - 1][Y01 - i - 1] == 'C')
                 {
                     S1++;
                     map03[X01 - i - 1][Y01 - i - 1] = '=';//
                 }
                 else if (X01 - i == X02 && Y01 - i == Y02)
                 {break;}
             }
             }

             else if (S2 == true)
             {
             for (int i = 0; i < 10; i++)
             {
                 if (map03[X01 - i - 1][Y01 + i - 1] == '&' || map03[X01 - i - 1][Y01 + i - 1] == 'C')
                 {
                     S1++;
                     map03[X01 - i - 1][Y01 + i - 1] = '=';//
                 }
                 else if (X01 - i == X02 && Y01 + i == Y02)
                 {break;}
             }
             }

             else if (S3 == true)
             {
             for (int i = 0; i < 10; i++)
             {
                 if (map03[X01 + i - 1][Y01 - i - 1] == '&' || map03[X01 + i - 1][Y01 - i - 1] == 'C')
                 {
                     S1++;
                     map03[X01 + i - 1][Y01 - i - 1] = '=';//
                 }
                 else if (X01 + i == X02 && Y01 - i == Y02)
                 {break;}
             }
             }

             else if (S4 == true)
             {
             for (int i = 0; i < 10; i++)
             {
                 if (map03[X01 + i][Y01 + i] == '&' || map03[X01 + i][Y01 + i] == 'C')
                 {
                     S1++;
                     map03[X01 + i][Y01 + i] = '=';//
                 }
                 else if (X01 + i + 1 == X02 && Y01 + i + 1 == Y02)
                 {break;}
             }
             }
///////////////////////////////////////////////////////////////////////////////////////////

            ///////////////////////////////////////////////////////////
            // Убирание выбранно шашки и вставание в указанное место //
            ///////////////////////////////////////////////////////////
            if (map03[X01 - 1][Y01 - 1] == '#')
            {map03[X01 - 1][Y01 - 1] = '=';
             map03[X02 - 1][Y02 - 1] = '#';}
            else if (map03[X01 - 1][Y01 - 1] == 'B')
            {map03[X01 - 1][Y01 - 1] = '=';
             map03[X02 - 1][Y02 - 1] = 'B';}
             ///////////////////////////////////////////

            ////////////////////////////////////////////////////////////////////////
            // Если шашка попадет на одно из этих мест, то она становиться дамкой //
            ////////////////////////////////////////////////////////////////////////
            if (map03[X02 - 1][Y02 - 1] == map03[0][1])
            {map03[0][1] = 'B';}
            else if (map03[X02 - 1][Y02 - 1] == map03[0][3])
            {map03[0][3] = 'B';}
            else if (map03[X02 - 1][Y02 - 1] == map03[0][5])
            {map03[0][5] = 'B';}
            /////////////////////////////////////////////

            if (S1 == 6)
            {
                cleanboard();
                Map6x6();
                cout<<"  Игрок "<<name1<<endl;
                cout<<"  Счет: "<<S1<<endl;
                cout<<"  Победил!!!"<<endl;
                return 0;
            }
        }
////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////
        else
        {   /////////////
            // Игрок 2 //
            /////////////
            cleanboard();
            Map6x6();
            cout<<"  Игрок "<<name2<<endl;
            cout<<"  Счет: "<<S2<<endl;
            cout<<"  Введите Х и Y (выбор шашки)"<<endl;
            cout<<"  Введите Х: ";
             cin>>X11;
            cout<<"  Введите Y: ";
             cin>>Y11;
             while (X11 < 1 || X11 > 10 || Y11 < 1 || Y11 > 10 || map03[X11 - 1][Y11 - 1] == '+'
                                                               || map03[X11 - 1][Y11 - 1] == '='
                                                               || map03[X11 - 1][Y11 - 1] == '#'
                                                               || map03[X11 - 1][Y11 - 1] == 'B')
             {
                 cleanboard();
                 Map6x6();
                 cout<<"  ERROR!"<<endl;
                 cout<<"  Игрок "<<name2<<endl;
                 cout<<"  Счет: "<<S2<<endl;
                 cout<<"  Введите Х и Y (выбор шашки)"<<endl;
                 cout<<"  Введите Х: ";
                  cin>>X11;
                 cout<<"  Введите Y: ";
                  cin>>Y11;
             }

/////////////////////////////////////////////////////////////////////////////////////
             if (map03[X11 - 1][Y11 - 1] == '&')
             {
                 ////////////////////////////////////
                 // Если выбранная шашка (обычная) //
                 ////////////////////////////////////

                 ///////////////////////////////////
                 if (map03[X11][Y11 - 2] == '=')
                 {map03[X11][Y11 - 2] = 'X';}
                 ////////////////////////////////
                 if (map03[X11][Y11] == '=')
                 {map03[X11][Y11] = 'X';}
                 ////////////////////////////////

             ///////////////////////////////////
             if (map03[X11 - 2][Y11 - 2] == '#' || map03[X11 - 2][Y11 - 2] == 'B')
             {
                 if (map03[X11 - 3][Y11 - 3] == '=')
                 {map03[X11 - 3][Y11 - 3] = '!';}///
                 /////////////////////////////////////////////////////////////////////
                 if (map03[X11 - 4][Y11 - 4] == '#' || map03[X11 - 4][Y11 - 4] == 'B')
                 {
                     if (map03[X11 - 5][Y11 - 5] == '=')
                     {map03[X11 - 5][Y11 - 5] = '!';}///
                     if (map03[X11 - 6][Y11 - 6] == '#' || map03[X11 - 6][Y11 - 6] == 'B')
                     {
                         if (map03[X11 - 7][Y11 - 7] == '=')
                         {map03[X11 - 7][Y11 - 7] = '!';}///
                         if (map03[X11 - 8][Y11 - 8] == '#' || map03[X11 - 8][Y11 - 8] == 'B')
                         {
                             if (map03[X11 - 9][Y11 - 9] == '=')
                             {map03[X11 - 9][Y11 - 9] = '!';}///
                         }
                     }
                 }
                 ///////////////////////////////////////////////////////////////////////
             }
             ////////////////////////////////
             if (map03[X11 - 2][Y11] == '#' || map03[X11 - 2][Y11] == 'B')
             {
                 if (map03[X11 - 3][Y11 + 1] == '=')
                 {map03[X11 - 3][Y11 + 1] = '!';}///
                 //////////////////////////////////////////////////////////////////////
                 if (map03[X11 - 4][Y11 + 2] == '#' || map03[X11 - 4][Y11 + 2] == 'B')
                 {
                     if (map03[X11 - 5][Y11 + 3] == '=')
                     {map03[X11 - 5][Y11 + 3] = '!';}///
                     if (map03[X11 - 6][Y11 + 4] == '#' || map03[X11 - 6][Y11 + 4] == 'B')
                     {
                         if (map03[X11 - 7][Y11 + 5] == '=')
                         {map03[X11 - 7][Y11 + 5] = '!';}///
                         if (map03[X11 - 8][Y11 + 6] == '#' || map03[X11 - 8][Y11 + 6] == 'B')
                         {
                             if (map03[X11 - 9][Y11 + 7] == '=')
                             {map03[X11 - 9][Y11 + 7] = '!';}///
                         }
                     }
                 }
                 /////////////////////////////////////////////////////////////////////////
             }
             ////////////////////////////////
             if (map03[X11][Y11 - 2] == '#' || map03[X11][Y11 - 2] == 'B')
             {
                 if (map03[X11 + 1][Y11 - 3] == '=')
                 {map03[X11 + 1][Y11 - 3] = '!';}///
                 //////////////////////////////////////////////////////////////////////
                 if (map03[X11 + 2][Y11 - 4] == '#' || map03[X11 + 2][Y11 - 4] == 'B')
                 {
                     if (map03[X11 + 3][Y11 - 5] == '=')
                     {map03[X11 + 3][Y11 - 5] = '!';}///
                     if (map03[X11 + 4][Y11 - 6] == '#' || map03[X11 + 4][Y11 - 6] == 'B')
                     {
                         if (map03[X11 + 5][Y11 - 7] == '=')
                         {map03[X11 + 5][Y11 - 7] = '!';}///
                         if (map03[X11 + 6][Y11 - 8] == '#' || map03[X11 + 6][Y11 - 8] == 'B')
                         {
                             if (map03[X11 + 7][Y11 - 9] == '=')
                             {map03[X11 + 7][Y11 - 9] = '!';}///
                         }
                     }
                 }
                 //////////////////////////////////////////////////////////////////////////
             }
             ////////////////////////////////
             if (map03[X11][Y11] == '#' || map03[X11][Y11] == 'B')
             {
                 if (map03[X11 + 1][Y11 + 1] == '=')
                 {map03[X11 + 1][Y11 + 1] = '!';}///
                 /////////////////////////////////////////////////////////////////////
                 if (map03[X11 + 2][Y11 + 2] == '#' || map03[X11 + 2][Y11 + 2] == 'B')
                 {
                     if (map03[X11 + 3][Y11 + 3] == '=')
                     {map03[X11 + 3][Y11 + 3] = '!';}///
                     if (map03[X11 + 4][Y11 + 4] == '#' || map03[X11 + 4][Y11 + 4] == 'B')
                     {
                         if (map03[X11 + 5][Y11 + 5] == '=')
                         {map03[X11 + 5][Y11 + 5] = '!';}///
                         if (map03[X11 + 6][Y11 + 6] == '#' || map03[X11 + 6][Y11 + 6] == 'B')
                         {
                             if (map03[X11 + 7][Y11 + 7] == '=')
                             {map03[X11 + 7][Y11 + 7] = '!';}///
                         }
                     }
                 }
                 /////////////////////////////////////////////////////////////////////////
             }
             ////////////////////////////////
             }
/////////////////////////////////////////////////////////////////////////////////////////

/////////////////////////////////////////////////////////////////////////////////////////
             else if (map03[X11 - 1][Y11 - 1] == 'C')
             { // Если выбранная шашка (дамка)
                 ///////////////////////////////
                 bool v1 = false;
                 for (int i = 0; i < 10; i++)
                 {
                     if (v1 == false)
                     {
                         if (map03[X11 - i - 1][Y11 - i - 1] == '=')
                         {map03[X11 - i - 1][Y11 - i - 1] = 'X';}
                     }
                     if (map03[X11 - i - 1][Y11 - i - 1] == '#' || map03[X11 - i - 1][Y11 - i - 1] == 'B')
                     {
                         if (map03[X11 - i - 2][Y11 - i - 2] != '=')
                         {break;}
                         v1 = true;}
                     else if (v1 == true)
                     {
                         if (map03[X11 - i - 1][Y11 - i - 1] == '=')
                         {map03[X11 - i - 1][Y11 - i - 1] = '!';}
                     }
                 }
                 ///////////////////////////////
                 bool v2 = false;
                 for (int i = 0; i < 10; i++)
                 {
                     if (v2 == false)
                     {
                         if (map03[X11 - i - 1][Y11 + i - 1] == '=')
                         {map03[X11 - i - 1][Y11 + i - 1] = 'X';}
                     }
                     if (map03[X11 - i - 1][Y11 + i - 1] == '#' || map03[X11 - i - 1][Y11 + i - 1] == 'B')
                     {
                         if (map03[X11 - i - 2][Y11 + i] != '=')
                         {break;}
                         v2 = true;}
                     else if (v2 == true)
                     {
                         if (map03[X11 - i - 1][Y11 + i - 1] == '=')
                         {map03[X11 - i - 1][Y11 + i - 1] = '!';}
                     }
                 }
                 ///////////////////////////////
                 bool v3 = false;
                 for (int i = 0; i < 10; i++)
                 {
                     if (v3 == false)
                     {
                         if (map03[X11 + i - 1][Y11 - i - 1] == '=')
                         {map03[X11 + i - 1][Y11 - i - 1] = 'X';}
                     }
                     if (map03[X11 + i - 1][Y11 - i - 1] == '#' || map03[X11 + i - 1][Y11 - i - 1] == 'B')
                     {
                         if (map03[X11 + i][Y11 - i - 2] != '=')
                         {break;}
                         v3 = true;}
                     else if (v3 == true)
                     {
                         if (map03[X11 + i - 1][Y11 - i - 1] == '=')
                         {map03[X11 + i - 1][Y11 - i - 1] = '!';}
                     }
                 }
                 ///////////////////////////////
                 bool v4 = false;
                 for (int i = -1; i < 10; i++)
                 {
                     if (v4 == false)
                     {
                         if (map03[X11 + i - 1][Y11 + i - 1] == '=')
                         {map03[X11 + i - 1][Y11 + i - 1] = 'X';}
                     }
                     if (map03[X11 + i][Y11 + i] == '#' || map03[X11 + i][Y11 + i] == 'B')
                     {
                         if (map03[X11 + i + 1][Y11 + i + 1] != '=')
                         {break;}
                         v4 = true;}
                     else if (v4 == true)
                     {
                         if (map03[X11 + i][Y11 + i] == '=')
                         {map03[X11 + i][Y11 + i] = '!';}
                     }
                 }
                 ///////////////////////////////
             }
//////////////////////////////////////////////////////////////////////////////////////////

             cleanboard();
             Map6x6();
             cout<<"  Игрок "<<name2<<endl;
             cout<<"  Счет: "<<S2<<endl;
            cout<<"  Введите Х и Y (куда поставить)"<<endl;
            cout<<"  Введите X: ";
             cin>>X12;
            cout<<"  Введите Y: ";
             cin>>Y12;
            while (X12 < 1 || X12 > 10 || Y12 < 1 || Y12 > 10 || map03[X12 - 1][Y12 - 1] == '+'
                                                              || map03[X12 - 1][Y12 - 1] == '='
                                                              || map03[X12 - 1][Y12 - 1] == '&'
                                                              || map03[X12 - 1][Y12 - 1] == 'C'
                                                              || map03[X12 - 1][Y12 - 1] == '#'
                                                              || map03[X12 - 1][Y12 - 1] == 'B')
            {
                 cleanboard();
                 Map6x6();
                 cout<<"  ERROR!"<<endl;
                 cout<<"  Игрок "<<name2<<endl;
                 cout<<"  Счет: "<<S2<<endl;
                 cout<<"  Введите Х и Y (куда поставить)"<<endl;
                 cout<<"  Введите Х: ";
                  cin>>X12;
                 cout<<"  Введите Y: ";
                  cin>>Y12;
            }

                 ///////////////////////////////
                 // Убирание Х-ов по всем сторонам //
                 ///////////////////////////////
                 for (int i = 0; i < 10; i++)
                 {
                     if (map03[X11 - i - 1][Y11 - i - 1] == 'X')
                     {map03[X11 - i - 1][Y11 - i - 1] = '=';}
                 }
                 ///////////////////////////////
                 for (int i = 0; i < 10; i++)
                 {
                     if (map03[X11 - i - 1][Y11 + i - 1] == 'X')
                     {map03[X11 - i - 1][Y11 + i - 1] = '=';}
                 }
                 ///////////////////////////////
                 for (int i = 0; i < 10; i++)
                 {
                     if (map03[X11 + i - 1][Y11 - i - 1] == 'X')
                     {map03[X11 + i - 1][Y11 - i - 1] = '=';}
                 }
                 ///////////////////////////////
                 for (int i = 0; i < 10; i++)
                 {
                     if (map03[X11 + i - 1][Y11 + i - 1] == 'X')
                     {map03[X11 + i - 1][Y11 + i - 1] = '=';}
                 }
                 ///////////////////////////////

//////////////////////////////////////////////////////////////////////////////////////////

                 /////////////////////////////////
                 // Убирание '!' по всем сторонам //
                 /////////////////////////////////
                 for (int i = 0; i < 10; i++)
                 {
                     if (map03[X11 - i - 1][Y11 - i - 1] == '!')
                     {map03[X11 - i - 1][Y11 - i - 1] = '=';}
                 }
                 ///////////////////////////////
                 for (int i = 0; i < 10; i++)
                 {
                     if (map03[X11 - i - 1][Y11 + i - 1] == '!')
                     {map03[X11 - i - 1][Y11 + i - 1] = '=';}
                 }
                 ///////////////////////////////
                 for (int i = 0; i < 10; i++)
                 {
                     if (map03[X11 + i - 1][Y11 - i - 1] == '!')
                     {map03[X11 + i - 1][Y11 - i - 1] = '=';}
                 }
                 ///////////////////////////////
                 for (int i = 0; i < 10; i++)
                 {
                     if (map03[X11 + i - 1][Y11 + i - 1] == '!')
                     {map03[X11 + i - 1][Y11 + i - 1] = '=';}
                 }
                 ///////////////////////////////

//////////////////////////////////////////////////////////////////////////////////////////

                 ////////////////////////////////////////////
                 // Поиск на какой стороне поставили шашку //
                 ////////////////////////////////////////////
                 bool S1 = false;
                 if (X12 < X11 && Y12 < Y11)
                 {S1 = true;
                  break;}
                 else
                 {S1 = false;}
                 ////////////////
                 bool S02 = false;
                 if (X12 < X11 && Y12 > Y11)
                 {S02 = true;
                  break;}
                 else
                 {S02 = false;}
                 ////////////////
                 bool S3 = false;
                 if (X12 > X11 && Y12 < Y11)
                 {S3 = true;
                  break;}
                 else
                 {S3 = false;}
                 ////////////////
                 bool S4 = false;
                 if (X12 > X11 && Y12 > Y11)
                 {S4 = true;
                  break;}
                 else
                 {S4 = false;}
/////////////////////////////////////////////////////////////////////////////////////////////

             /////////////////////////////////////////
             // Поедание врагов и зачитывание очков //
             /////////////////////////////////////////
             if (S1 == true)
             {
             for (int i = 0; i < 10; i++)
             {
                 if (map03[X11 - i - 1][Y11 - i - 1] == '#' || map03[X11 - i - 1][Y11 - i - 1] == 'B')
                 {
                     S2++;
                     map03[X11 - i - 1][Y11 - i - 1] = '=';//
                 }
                 else if (X11 - i == X12 && Y11 - i == Y12)
                 {break;}
             }
             }

             else if (S02 == true)
             {
             for (int i = 0; i < 10; i++)
             {
                 if (map03[X11 - i - 1][Y11 + i - 1] == '#' || map03[X11 - i - 1][Y11 + i - 1] == 'B')
                 {
                     S2++;
                     map03[X11 - i - 1][Y11 + i - 1] = '=';//
                 }
                 else if (X11 - i == X12 && Y11 + i == Y12)
                 {break;}
             }
             }

             else if (S3 == true)
             {
             for (int i = 0; i < 10; i++)
             {
                 if (map03[X11 + i - 1][Y11 - i - 1] == '#' || map03[X11 + i - 1][Y11 - i - 1] == 'B')
                 {
                     S2++;
                     map03[X11 + i - 1][Y11 - i - 1] = '=';//
                 }
                 else if (X11 + i == X12 && Y11 - i == Y12)
                 {break;}
             }
             }

             else if (S4 == true)
             {
             for (int i = 0; i < 10; i++)
             {
                 if (map03[X11 + i][Y11 + i] == '#' || map03[X11 + i][Y11 + i] == 'B')
                 {
                     S2++;
                     map03[X11 + i][Y11 + i] = '=';//
                 }
                 else if (X11 + i + 1 == X12 && Y11 + i + 1 == Y12)
                 {break;}
             }
             }
///////////////////////////////////////////////////////////////////////////////////////////

            ///////////////////////////////////////////////////////////
            // Убирание выбранно шашки и вставание в указанное место //
            ///////////////////////////////////////////////////////////
            if (map03[X11 - 1][Y11 - 1] == '&')
            {map03[X11 - 1][Y11 - 1] = '=';
             map03[X12 - 1][Y12 - 1] = '&';}
            else if (map03[X11 - 1][Y11 - 1] == 'C')
            {map03[X11 - 1][Y11 - 1] = '=';
             map03[X12 - 1][Y12 - 1] = 'C';}
             ///////////////////////////////////////////

            ////////////////////////////////////////////////////////////////////////
            // Если шашка попадет на одно из этих мест, то она становиться дамкой //
            ////////////////////////////////////////////////////////////////////////
            if (map03[X12 - 1][Y12 - 1] == map03[5][0])
            {map03[0][1] = 'C';}
            else if (map03[X12 - 1][Y12 - 1] == map03[5][2])
            {map03[0][3] = 'C';}
            else if (map03[X12 - 1][Y12 - 1] == map03[5][4])
            {map03[0][5] = 'C';}
            /////////////////////////////////////////////

            if (S2 == 6)
            {
                cleanboard();
                Map6x6();
                cout<<"  Игрок "<<name2<<endl;
                cout<<"  Счет: "<<S2<<endl;
                cout<<"  Победил!!!"<<endl;
                return 0;
            }
        }// ELSE //
    }// FOR //
} // CASE 3 //
break;
////////////////////////////////////////////////////////////////////////////////////////////
} // SWITCH //

    return 0;
}
